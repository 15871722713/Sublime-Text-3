{
	"folder_history":
	[
		"/D/Autotest",
		"/D/Autotest_Dev",
		"/C/config",
		"/C/Python/Lib/site-packages/selenium",
		"/D/desktop/daily_test_stable",
		"/D/desktop/homeassistant-config",
		"/D/desktop/homeassistant",
		"/D/desktop/baacloud",
		"/D/desktop/Autotest",
		"/D/desktop/core",
		"/C/Python/Lib/site-packages/pydivert",
		"/C/Python/Lib/site-packages/rawpy",
		"/D/desktop/aiqicha",
		"/C/Python/Lib/site-packages/tenacity",
		"/D/desktop/proxy_pool-master",
		"/D/aiqicha",
		"/D/desktop/spider_frame",
		"/C/Python/Lib/site-packages/requests",
		"/D/desktop/py_test",
		"/D/desktop/ansible_study",
		"/D/desktop/genieacs",
		"/D/desktop/ten",
		"/D/desktop/baa",
		"/D/desktop/captcha_trainer",
		"/D/desktop/cnn_captcha",
		"/D/desktop/genieacs_old",
		"/D/desktop/test_gateway",
		"/D/desktop/jd_maotai_seckill",
		"/D/desktop/genieacs-sim",
		"/D/desktop/daily_test_stable/test_gateway/lxd",
		"/D/desktop/pytest-html-reporter",
		"/D/Autotest_Dev/验收/Start/四次验收/06 Start特性脚本执行",
		"/C/Python/Lib/site-packages/scapy",
		"/D/hgu_autotestc103",
		"/D/hgu_autotestc103/testData/version",
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SFTP",
		"/D/desktop/sftp",
		"/D/desktop/sftp_backup",
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SFTP/sftp",
		"/C/Users/cienet/Desktop/openacs",
		"/C/Users/cienet/Desktop/baacloud",
		"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service/WiFi/solocase",
		"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/third_party_files",
		"/C/Users/cienet/Desktop/daily_test_stable",
		"//10.182.33.14/d$/FHATP/user/hgu_autotestb103",
		"/C/Users/cienet/Desktop/genieacs-services",
		"/C/Users/cienet/Desktop/genieacs",
		"/C/Python/Lib/logging",
		"/C/Users/cienet/Desktop/Autotest",
		"//10.182.33.15/d$/autotest",
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3",
		"/C/Users/cienet/Desktop/hgu_autotest",
		"//10.182.33.15/d$/FHATP/user/hgu_autotestc103",
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages",
		"//10.182.34.15/d$/FHATP/user/hgu_autotestc103",
		"/C/Python/Lib/site-packages/paramiko",
		"/C/Users/cienet/Desktop/py_test"
	],
	"last_version": 3211,
	"last_window_id": 332,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 677.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"getipv",
						"get_ipv6_prix"
					],
					[
						"do",
						"divmod\tfunction"
					],
					[
						"id",
						"imgData\tstatement"
					],
					[
						"sl",
						"sleep_time"
					],
					[
						"Im",
						"ImpStartOther\tclass"
					],
					[
						"type",
						"type_\tparam"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/User/terminus.sublime-build",
							""
						],
						[
							"Packages/User/terminus.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"pr",
						"PackageResourceViewer: Open Resource"
					],
					[
						"Package Control: ",
						"Package Control: Disable Package"
					],
					[
						"pcip",
						"Package Control: Install Package"
					],
					[
						"pcrp",
						"Package Control: Remove Package"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pi",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 653.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": true,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_004.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-mirage.sublime-color-scheme",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_DHCP_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_PPPOE_001.py",
				"/D/Autotest_Dev/Lib/Service/WAN/srvWANConnect.py",
				"/D/Autotest_Dev/Config/site_para.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMTr069.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/bizBSDM.py",
				"/D/Autotest_Dev/Lib/Service/WAN/impWanConxWeb.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-mirage.sublime-theme",
				"/D/Autotest_Dev/test.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-dark.sublime-color-scheme",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_PPPOE_002.py",
				"/D/Autotest_Dev/Service/BSDM/parameter_file/parameter.py",
				"/D/Autotest_Dev/Lib/general/jsonlib.py",
				"/D/Autotest_Dev/Lib/Service/WAN/impWanConxTR069.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_003.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_005.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_006.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_007.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_002.py",
				"/D/Autotest_Dev/Lib/Service/WAN/bizWan.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_DS_001.py",
				"/D/Autotest_Dev/Lib/general/log/bizLog.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/test.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMCMD.py",
				"/D/Autotest_Dev/Config/JsonData/CMCC_pppwanbridge.txt",
				"/D/Autotest_Dev/Lib/Service/AC/impACWeb.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_LANSP_LAN_LANHAC_006_2PC.py",
				"/D/Autotest_Dev/Lib/general/stc/impHost.py",
				"/D/Autotest_Dev/Service/Global.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_LANSP_LANHIQ_001.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_White_004.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_Black_004.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMWeb.py",
				"/D/Autotest_Dev/Lib/Service/AC/mapAC.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv6_Stateless_003.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-mousemap",
				"/D/Autotest_Dev/Config/ver_para.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv6_Stateless_004.py",
				"/D/新建文件夹/test.py",
				"/D/新建文件夹/test2.py",
				"/D/新建文件夹/test3.py",
				"/D/新建文件夹/test4.py",
				"/D/Autotest/.gitignore",
				"/D/Autotest_Dev/.git/index",
				"/D/Autotest_Dev/.git/config",
				"/D/Autotest_Dev/sftp-config.json",
				"/D/Autotest_Dev/Lib/general/hgu_telnet.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impFactory.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStartCMD.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_PG_001.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStartWeb.py",
				"/D/Autotest_Dev/Lib/Service/TR069/bizTR069.py",
				"/D/Autotest_Dev/Lib/Service/AC/bizAC.py",
				"/D/Autotest_Dev/Lib/Service/AC/impACFactory.py",
				"/D/Autotest_Dev/Lib/Service/AC/impACTr069.py",
				"/D/Autotest_Dev/Lib/Service/Start/bizStart.py",
				"/D/Autotest_Dev/Lib/Service/Start/impConsle.py",
				"/D/Autotest_Dev/Lib/Service/Start/impOLT.py",
				"/D/Autotest_Dev/Lib/Service/Start/impParaWork.py",
				"/D/Autotest_Dev/Lib/Service/Start/impServiceReady.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStart.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStartTr069.py",
				"/D/Autotest_Dev/Lib/Service/Start/intfServiceReady.py",
				"/D/Autotest_Dev/Lib/Service/Start/map_web_element.py",
				"/D/Autotest_Dev/Lib/general/stc/impDevice.py",
				"/D/Autotest_Dev/Lib/general/log/unilogintf.py",
				"/D/Autotest_Dev/Service/CyberApp/solocase/CyberApp_Diag_Inform_008.py",
				"/D/Autotest/Config/site_para.py",
				"/D/Autotest_Dev/Lib/Service/TR069/impTR069.py",
				"/D/Autotest/Lib/Service/__init__.py",
				"/D/Autotest_Dev/Service/CyberApp/solocase/CyberApp_Diag_Inform_004.py",
				"/D/Autotest_Dev/Lib/general/util_basic/absWeb.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/map_web_element.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/test4.py",
				"/D/Autotest_Dev/test4.py",
				"/D/Autotest_Dev/name.txt",
				"/D/Autotest_Dev/test2.py",
				"/D/Autotest_Dev/Lib/general/util_basic/impWEBChn.py",
				"/D/Autotest_Dev/Lib/Service/WAN/mapWan.py",
				"/D/Autotest_Dev/test3.py",
				"/D/Autotest_Dev/Service/Voice/solocase/VOIP_SYS_CFG_TR069_WAN_006.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_TSP_TFS_001.py",
				"/D/Autotest_Dev/Lib/Service/CMCCIP/absTrafficMngFactory.py",
				"/D/Autotest_Dev/Service/SINTF/solocase/PT_IFP_TSP_TFS_001.py",
				"/D/Autotest_Dev/filename.xml",
				"/D/desktop/烽火/业务部署/电信工单/电信工单.jmx",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_DS_005.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_Multi_004.py",
				"/D/Autotest_Dev/Lib/general/stc/absDevice.py",
				"/D/Autotest_Dev/Lib/general/stc/absNetwork.py",
				"/D/Autotest_Dev/Lib/general/util_basic/testbed.py",
				"/D/desktop/烽火/业务部署/移动工单/省级数字家庭管理平台与网管系统间接口.jmx",
				"/D/Autotest_Dev/Lib/general/util_basic/impHGUProduct.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv4_DHCP_015.py",
				"/D/Autotest_Dev/Service/Start/solocase/Start_UPGRD_NRM_RMSCENE_INTERBN_001.py",
				"/D/Autotest_Dev/Service/CyberApp/solocase/CyberApp_Diag_Inform_007.py",
				"/D/Autotest_Dev/Service/TR069/solocase/TR069_Procedure_FactoryReset_002.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_Oprt_001.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_Oprt_005.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_Oprt_003.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_Oprt_002.py",
				"/D/Autotest_Dev/Lib/Service/WAN/impWanConxAllComm.py",
				"/D/Autotest_Dev/Lib/Service/DHCPOption/bizDHCPOption.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv4_DHCP_014.py",
				"/C/config/home-assistant.log"
			],
			"find":
			{
				"height": 54.0
			},
			"find_in_files":
			{
				"height": 826.0,
				"where_history":
				[
					"D:\\Autotest_Dev\\",
					"D:\\Autotest_Dev\\Service\\BSDM\\",
					"D:\\Autotest_Dev\\Service\\BSDM",
					"D:\\Autotest_Dev\\Lib\\Service\\",
					"D:\\Autotest_Dev\\Service\\BSDM"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"rol",
					"com",
					"side",
					"ipv4地址获取方式的查询结果",
					"输入值为",
					"BSDM_WorkOrder_WO_INTERNET_PPPOE_002",
					"dhcp",
					"if 'process100' in self.result and self.result",
					"if 'process60' in self.result and self.result",
					"if 'process50' in self.result and self.result",
					"if 'process40' in self.result and self.result",
					"if 'process30' in self.result and self.result",
					"if 'process20' in self.result and self.result",
					"in self.result and self.result",
					"if 'process40' in self.result and '已获得管理IP，正在连接ITMS' in self.result['process40']['res']:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条未跳转至40%，“已获得管理IP，正在连接ITMS”；')",
					"if 'process30' in self.result and '注册OLT成功，正在获取管理IP' in self.result['process30']['res']:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；',\n                           '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；', '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；',\n                           '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；', '观察进度条未跳转至30%，“注册OLT成功，正在获取管理IP”；')",
					"if 'process20' in self.result and '正在注册OLT' in self.result['process20']['res']:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条停留在20%“正在注册OLT”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条没有停留在20%“正在注册OLT”')",
					"省注册OLT成功，正在获取管理IP",
					"self.assertion(AbsInCo('process'",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至60%'",
					"self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至40%'",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至40%'",
					"跳转至30%",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')",
					"if 'process100' in self.result and self.result['process100']['res'] == 'ITMS平台业务数据下发成功':\n            self.assertion(AbsInCo('process', 'success'), '9、【check】观察进度条跳转至100%，“ITMS平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.', '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】观察进度条跳转至100%，“ITMS平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.', '观察进度条未跳转至100%，“ITMS平台业务数据下发成功”.')",
					"if 'process60' in self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n            self.assertion(AbsInCo('process', 'success'), '8、【check】观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                           '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                           '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', '观察进度条未跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；')",
					"if 'process50' in self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n            self.assertion(AbsInCo('process', 'success'), '7、【check】观察进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                           '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；', '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】观察进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                           '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；', '进度条未跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条未跳转至40%，“已获得管理IP，正在连接ITMS”；')",
					"if 'process30' in self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”',\n                           '进度条跳转至30%，“注册OLT成功，正在获取管理IP”', '进度条跳转至30%，“注册OLT成功，正在获取管理IP”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”',\n                           '进度条跳转至30%，“注册OLT成功，正在获取管理IP”', '进度条未跳转至30%，“注册OLT成功，正在获取管理IP”')",
					"if 'process100' in self.result and self.result['process100']['res'] == '省级数字家庭管理平台业务数据下发成功':\n            self.assertion(AbsInCo('process', 'success'), '9、【check】观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.', '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.', '观察进度条未跳转至100%，“省级数字家庭管理平台业务数据下发成功”.')",
					"if 'process60' in self.result and self.result['process60']['res'] == '省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤':\n            self.assertion(AbsInCo('process', 'success'), '8、【check】观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                           '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                           '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', '观察进度条未跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；')",
					"if 'process50' in self.result and self.result['process50']['res'] == '等待省级数字家庭管理平台下发业务数据':\n            self.assertion(AbsInCo('process', 'success'), '7、【check】观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；',\n                           '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；', '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；',\n                           '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；', '观察进度条跳未转至50%，“等待省级数字家庭管理平台下发业务数据”；')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；', '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；', '观察进度条未跳转至40%，显示“已获得管理IP，正在连接省级数字家庭管理平台”；')",
					"30",
					"if 'process30' in self.result and self.result['process30']['res'] == '正在获取管理IP':\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“正在获取管理IP”',\n                           '进度条跳转至30%，“正在获取管理IP”', '进度条跳转至30%，“正在获取管理IP”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“正在获取管理IP”',\n                           '进度条跳转至30%，“正在获取管理IP”', '进度条未跳转至30%，“正在获取管理IP”')",
					"if 'process20' in self.result and self.result['process20']['res'] == '正在注册OLT':\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条停留在20%“正在注册OLT”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条没有停留在20%“正在注册OLT”')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':",
					"2、失败提示标点符号与实际不一致",
					"IPv4",
					"ipv4",
					"IPv4",
					"ipv4",
					"lanport",
					"wband_name",
					"user",
					"            vectorargues[\"wband_name\"] = user\n",
					"user",
					"HGU_LOID",
					"psw",
					"vlan",
					"ipv6_prix",
					"i",
					"int",
					"vlan",
					"wan_query",
					"self.web.get_and_set_regist_status()  # 获取注册结果\n            if 'process50' in self.result:"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process20' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')\n            if self.result and self.result['process20']['res'] == '正在注册OLT':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')",
					"注册OLT成功，正在获取管理IP",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '8、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '7、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"self.assertion(AbsInCo('process', 'success'), '8、【check】查看进度条是否跳转至60%'",
					"self.assertion(AbsInCo('process', 'fail'), '7、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'success'), '7、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%'",
					"self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%'",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process100' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '9、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')\n            if self.result and self.result['process100']['res'] == 'ITMS平台业务数据下发成功':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台业务数据下发成功”；',\n                               '显示“ITMS平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台业务数据下发成功”；',\n                               '显示“ITMS平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process100' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')\n            if self.result and self.result['process100']['res'] == '省级数字家庭管理平台业务数据下发成功':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省级数字家庭管理平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省级数字家庭管理平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == '省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                               '显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                               '显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '等待省级数字家庭管理平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“等待省级数字家庭管理平台下发业务数据”；',\n                               '显示“等待省级数字家庭管理平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“等待省级数字家庭管理平台下发业务数据”；',\n                               '显示“等待省级数字家庭管理平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                               '显示“已获得管理IP，正在连接省级数字家庭管理平台”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                               '显示“已获得管理IP，正在连接省级数字家庭管理平台”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')",
					"if 'process20' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')\n            if self.result and self.result['process20']['res'] == '正在注册OLT':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 33.0
			},
			"input":
			{
				"height": 71.0
			},
			"menu_visible": true,
			"output.Terminus":
			{
				"height": 174.0
			},
			"output.Terminus Build Results":
			{
				"height": 391.0
			},
			"output.exec":
			{
				"height": 503.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.sftp":
			{
				"height": 158.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 62.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"bizbsdm",
						"Lib\\Service\\BSDM\\bizBSDM.py"
					],
					[
						"BSDM_Registerbar_ACS_Success_CTCU_002",
						"Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Success_CTCU_002.py"
					],
					[
						"dsfailctcu",
						"Service\\BSDM\\solocase\\BSDM_Registerbar_DS_Fail_CTCU_001.py"
					],
					[
						"glob",
						"Service\\Global.py"
					],
					[
						"sitepa",
						"Config\\site_para.py"
					],
					[
						"cmccipfplansp00",
						"Service\\CMCCIP\\solocase\\CMCCIP_FP_LANSP_LANHIQ_001.py"
					],
					[
						"macfiw",
						"Service\\AC\\solocase\\AC_MACFilter_White_004.py"
					],
					[
						"ver",
						"Config\\ver_para.py"
					],
					[
						"wan003",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv6_Stateless_003.py"
					],
					[
						"pg",
						"Service\\AC\\solocase\\AC_PG_001.py"
					],
					[
						"impde",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"VOIP_SYS_CFG_TR069_WAN_006 ",
						"Service\\Voice\\solocase\\VOIP_SYS_CFG_TR069_WAN_006.py"
					],
					[
						"imp",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"tfs_001",
						"Service\\CMCCIP\\solocase\\CMCCIP_FP_TSP_TFS_001.py"
					],
					[
						"jsonl",
						"Lib\\general\\jsonlib.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"WAN_RT_IPoE_SSIPv4_DHCP_015.py",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv4_DHCP_015.py"
					],
					[
						"imphost",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"dslit002",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv6_DSLite_002.py"
					],
					[
						"test",
						"test.py"
					],
					[
						"telnet",
						"Service\\AC\\solocase\\AC_Telnet_001.py"
					],
					[
						"AC_URLFilter_White_004 ",
						"Service\\AC\\solocase\\AC_URLFilter_White_004.py"
					],
					[
						"AC_TwoFilter_White_003",
						"Service\\AC\\solocase\\AC_TwoFilter_White_003.py"
					],
					[
						"urlfiw",
						"Service\\AC\\solocase\\AC_URLFilter_White_003.py"
					],
					[
						"vbind002.",
						"Service\\WAN\\solocase\\WAN_Vbind_002.py"
					],
					[
						"impho",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"testb",
						"Lib\\general\\util_basic\\testbed.py"
					],
					[
						"AC_URLFilter_Black_002",
						"Service\\AC\\solocase\\AC_URLFilter_Black_002.py"
					],
					[
						"sitep",
						"Config\\site_para.py"
					],
					[
						"AC_MACFilter_Black_006",
						"Service\\AC\\solocase\\AC_MACFilter_Black_006.py"
					],
					[
						"bizac",
						"Lib\\Service\\AC\\bizAC.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impcon",
						"Lib\\Service\\Start\\impConsle.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"biztr",
						"Lib\\Service\\TR069\\bizTR069.py"
					],
					[
						"impdevi",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"diag001",
						"Service\\CyberApp\\solocase\\CyberApp_Diag_Ping_001.py"
					],
					[
						"impdev",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"imph",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"imphgu",
						"Lib\\general\\util_basic\\impHGUProduct.py"
					],
					[
						"bizwan",
						"Lib\\Service\\WAN\\bizWan.py"
					],
					[
						"imppara",
						"Lib\\Service\\Start\\impParaWork.py"
					],
					[
						"WAN_RT_PPPoE_SSIPv4_009",
						"Service\\WAN\\solocase\\WAN_RT_PPPoE_SSIPv4_009.py"
					],
					[
						"biza",
						"Lib\\Service\\AC\\bizAC.py"
					],
					[
						"test.py",
						"Lib\\general\\test.py"
					],
					[
						"bizvoice",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"acsrec005.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_005.py"
					],
					[
						"oltreco002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_OLT_RECOV_002.py"
					],
					[
						"pg_",
						"Service\\AC\\solocase\\AC_PG_001.py"
					],
					[
						"imphos",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"impactr",
						"Lib\\Service\\AC\\impACTr069.py"
					],
					[
						"g",
						"Service\\Global.py"
					],
					[
						"acsreco",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_009.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"AC_MACNum_001",
						"Service\\AC\\solocase\\AC_MACNum_001.py"
					],
					[
						"AC_MACFilter_Black_004",
						"Service\\AC\\solocase\\AC_MACFilter_Black_004.py"
					],
					[
						"hgu",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"hgute",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"htu",
						"testData\\version\\HG6543C1\\CT\\Hubei\\targetversion\\local_frk_image_UniPon_20200401230806.img"
					],
					[
						"servicere",
						"Lib\\Service\\Start\\impServiceReady.py"
					],
					[
						"jsol",
						"Lib\\general\\jsonlib.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 345.0,
				"last_filter": "setpppwan",
				"selected_items":
				[
					[
						"setpppwan",
						"set_pppwanbridge"
					],
					[
						"set_dhcpwan",
						"set_dhcpwanroute"
					],
					[
						"enabletelnet",
						"enable_telnet"
					]
				],
				"width": 580.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 385.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1208.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"getipv",
						"get_ipv6_prix"
					],
					[
						"do",
						"divmod\tfunction"
					],
					[
						"id",
						"imgData\tstatement"
					],
					[
						"sl",
						"sleep_time"
					],
					[
						"Im",
						"ImpStartOther\tclass"
					],
					[
						"type",
						"type_\tparam"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_002.py",
					"settings":
					{
						"buffer_size": 8494,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_001.py",
					"settings":
					{
						"buffer_size": 8741,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_002.py",
					"settings":
					{
						"buffer_size": 11026,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_003.py",
					"settings":
					{
						"buffer_size": 8751,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_004.py",
					"settings":
					{
						"buffer_size": 10968,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_005.py",
					"settings":
					{
						"buffer_size": 8751,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_006.py",
					"settings":
					{
						"buffer_size": 11026,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_007.py",
					"settings":
					{
						"buffer_size": 10358,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_002.py",
					"settings":
					{
						"buffer_size": 9908,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_002.py",
					"settings":
					{
						"buffer_size": 8532,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"contents": "Searching 30 files for \"if 'msg' in self.result and self.result['msg']\"\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CM_001.py:\n  134              self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n  135          logger.show_one_step(AbsInCo('process', 'success'), '7、【check】观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.')\n  136:         if 'msg' in self.result and self.result['msg'] == '在省级数字家庭管理平台上注册失败，正在重试':\n  137              self.assertion(AbsInCo('process', 'success'), '7、【check】观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.',\n  138                             '观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CM_002.py:\n  136              self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n  137          logger.show_one_step(AbsInCo('process', 'success'), '7、【check】观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.')\n  138:         if 'msg' in self.result and self.result['msg'] == '在省级数字家庭管理平台上注册失败，正在重试':\n  139              self.assertion(AbsInCo('process', 'success'), '7、【check】观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.',\n  140                             '观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  149              res = self.web.regist_web(self.var1)  # 使用LOID或者密码进行注册\n  150              self.result = self.web.get_and_set_regist_status()  # 获取注册结果\n  151:             if 'msg' in self.result and self.result['msg'] == '在省级数字家庭管理平台上注册失败，正在重试':\n  152                  self.assertion(AbsInCo('process', 'success'), '7、【check】观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.',\n  153                                 '观察页面提示，“在省级数字家庭管理平台上注册失败，正在重试”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  159          logger.show_one_step(AbsInCo('process', 'success'),\n  160                               '9、【check】最后观察页面提示，“在省级数字家庭管理平台上注册失败，请联系客户经理或拨打10086”.')\n  161:         if 'msg' in self.result and self.result['msg'] == '在省级数字家庭管理平台上注册失败，请联系客户经理或拨打10086':\n  162              self.assertion(AbsInCo('process', 'success'), '9、【check】最后观察页面提示，“在省级数字家庭管理平台上注册失败，请联系客户经理或拨打10086”.',\n  163                             '观察页面提示，“在省级数字家庭管理平台上注册失败，请联系客户经理或拨打10086”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_001.py:\n  139          logger.show_one_step(AbsInCo('process', 'success'),\n  140                               '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.')\n  141:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  142              self.assertion(AbsInCo('process', 'success'), '8、观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.',\n  143                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_002.py:\n  143          logger.show_one_step(AbsInCo('process', 'success'),\n  144                               '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；')\n  145:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  146              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  147                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  158              res = self.web.regist_web(self.var1)  # 使用LOID或者密码进行注册\n  159              self.result = self.web.get_and_set_regist_status(status={'40': '1'})  # 获取注册结果\n  160:             if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  161                  self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  162                                 '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  167          logger.show_one_step(AbsInCo('process', 'success'),\n  168                               '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.')\n  169:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000':\n  170              self.assertion(AbsInCo('process', 'success'), '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.',\n  171                             '观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_003.py:\n  139          logger.show_one_step(AbsInCo('process', 'success'),\n  140                               '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.')\n  141:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  142              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.',\n  143                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_004.py:\n  142  \n  143          logger.show_one_step(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；')\n  144:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  145              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  146                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  157              res = self.web.regist_web(self.var1)  # 使用LOID或者密码进行注册\n  158              self.result = self.web.get_and_set_regist_status(status={'40': '2'})  # 获取注册结果\n  159:             if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  160                  self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  161                                 '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  165              i += 1\n  166          logger.show_one_step(AbsInCo('process', 'success'), '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.')\n  167:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000':\n  168              self.assertion(AbsInCo('process', 'success'), '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.',\n  169                             '观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_005.py:\n  139          logger.show_one_step(AbsInCo('process', 'success'),\n  140                               '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.')\n  141:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  142              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.',\n  143                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_006.py:\n  143          logger.show_one_step(AbsInCo('process', 'success'),\n  144                               '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；')\n  145:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  146              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  147                             '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  158              res = self.web.regist_web(self.var1)  # 使用LOID或者密码进行注册\n  159              self.result = self.web.get_and_set_regist_status(status={'40': '3'})  # 获取注册结果\n  160:             if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  161                  self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；',\n  162                                 '页面提示，“在ITMS上注册失败！请检查宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n  ...\n  167          logger.show_one_step(AbsInCo('process', 'success'),\n  168                               '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.')\n  169:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000':\n  170              self.assertion(AbsInCo('process', 'success'), '10、【check】观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.',\n  171                             '观察页面提示，“在ITMS上注册失败！请3分钟后重试，如无法解决请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_007.py:\n  142          logger.show_one_step(AbsInCo('process', 'success'),\n  143                               '8、【check】观察页面提示，“在ITMS上注册超时！请检查线路后重试，如无法解决请联系客户经理或拨打10000”；')\n  144:         if 'msg' in self.result and self.result['msg'] == '在ITMS上注册超时！请检查线路后重试，如无法解决请联系客户经理或拨打10000':\n  145              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“在ITMS上注册超时！请检查线路后重试，如无法解决请联系客户经理或拨打10000”；',\n  146                             '页面提示，“在ITMS上注册超时！请检查线路后重试，如无法解决请联系客户经理或拨打10000”；', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Success_CM_002.py:\n  138  \n  139          logger.show_one_step(AbsInCo('process', 'success'), '8、【check】观察页面提示，“注册成功，无需再注册”.')\n  140:         if 'msg' in self.result and self.result['msg'] == '注册成功，无需再注册':\n  141              self.assertion(AbsInCo('process', 'success'), '8、【check】观察页面提示，“注册成功，无需再注册”.',\n  142                             '页面提示，“注册成功，无需再注册”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_DS_Fail_CM_001.py:\n  173              logger.show_opr_one_step(AbsInCo('process', 'cfg-fail'), '11、模拟平台下发result为2；')\n  174          logger.show_one_step(AbsInCo('process', 'success'), '12、【check】观察页面提示，“省级数字家庭管理平台下发业务异常，请联系客户经理或拨打10086.')\n  175:         if 'msg' in self.result and self.result['msg'] == '省级数字家庭管理平台下发业务异常，请联系客户经理或拨打10086':\n  176              self.assertion(AbsInCo('process', 'success'), '12、【check】观察页面提示，“省级数字家庭管理平台下发业务异常，请联系客户经理或拨打10086.',\n  177                             '观察页面提示，“省级数字家庭管理平台下发业务异常，请联系客户经理或拨打10086.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_DS_Fail_CTCU_001.py:\n  163              logger.show_opr_one_step(AbsInCo('process', 'cfg-fail'), '9、模拟平台下发result为2；')\n  164          logger.show_one_step(AbsInCo('process', 'success'), '10、【check】观察页面显示，“ITMS下发业务异常！请联系客户经理或拨打10000”.')\n  165:         if 'msg' in self.result and self.result['msg'] == 'ITMS下发业务异常！请联系客户经理或拨打10000':\n  166              self.assertion(AbsInCo('process', 'success'), '10、【check】观察页面显示，“ITMS下发业务异常！请联系客户经理或拨打10000”.',\n  167                             '页面显示，“ITMS下发业务异常！请联系客户经理或拨打10000', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_IP_Fail_CM_001.py:\n  119              self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n  120          logger.show_one_step(AbsInCo('process', 'success'), '6、【check】观察页面提示，“到省级数字家庭管理平台的通道不通，请联系客户经理或拨打10086”.')\n  121:         if 'msg' in self.result and self.result['msg'] == '到省级数字家庭管理平台的通道不通，请联系客户经理或拨打10086':\n  122              self.assertion(AbsInCo('process', 'success'), '6、【check】观察页面提示，“到省级数字家庭管理平台的通道不通，请联系客户经理或拨打10086”.',\n  123                             '观察页面提示，“到省级数字家庭管理平台的通道不通，请联系客户经理或拨打10086”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_IP_Fail_CTCU_001.py:\n  119              self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n  120          logger.show_one_step(AbsInCo('process', 'success'), '6、【check】持续观察页面提示“到ITMS的通道不通，请联系客户经理或拨打10000”.')\n  121:         if 'msg' in self.result and self.result['msg'] == '到ITMS的通道不通，请联系客户经理或拨打10000':\n  122              self.assertion(AbsInCo('process', 'success'), '6、【check】持续观察页面提示“到ITMS的通道不通，请联系客户经理或拨打10000”.',\n  123                             '页面提示“到ITMS的通道不通，请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_OLT_Fail_CM_001.py:\n  113              logger.show_opr_one_step(AbsInCo('process', 'qry-fail'), '指示灯状态暂不检查，待统一平台后添加telnet查询。')\n  114          logger.show_one_step(AbsInCo('process', 'success'), '6、【check】观察页面提示“在OLT上注册失败，请检查光信号灯是否处于熄灭状态、Password是否正确”.')\n  115:         if 'msg' in self.result and self.result['msg'] == '在OLT上注册失败，请检查光信号灯是否处于熄灭状态、Password是否正确':\n  116              self.assertion(AbsInCo('process', 'success'), '6、【check】观察页面提示“在OLT上注册失败，请检查光信号灯是否处于熄灭状态、Password是否正确”.',\n  117                             '页面提示“在OLT上注册失败，请检查光信号灯是否处于熄灭状态、Password是否正确”.', f'观察页面提示，“{self.result[\"msg\"]}”.')\n\nD:\\Autotest_Dev\\Service\\BSDM\\solocase\\BSDM_Registerbar_OLT_Fail_CTCU_001.py:\n  113          logger.show_one_step(AbsInCo('process', 'success'),\n  114                               '6、【check】观察页面提示“在OLT上注册失败，请检查光纤是否已正常连接、宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.')\n  115:         if 'msg' in self.result and self.result['msg'] == '在OLT上注册失败，请检查光纤是否已正常连接、宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000':\n  116              self.assertion(AbsInCo('process', 'success'), '6、【check】观察页面提示“在OLT上注册失败，请检查光纤是否已正常连接、宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.',\n  117                             '页面提示“在OLT上注册失败，请检查光纤是否已正常连接、宽带识别码和密码是否正确，如无法解决请联系客户经理或拨打10000”.', f'页面提示，“{self.result[\"msg\"]}”.')\n\n24 matches across 16 files\n",
					"settings":
					{
						"buffer_size": 14170,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						],
						[
							"Packages/User/terminus.sublime-build",
							""
						],
						[
							"Packages/User/terminus.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"pcr",
						"Package Control: Remove Package"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"pr",
						"PackageResourceViewer: Open Resource"
					],
					[
						"Package Control: ",
						"Package Control: Disable Package"
					],
					[
						"pcip",
						"Package Control: Install Package"
					],
					[
						"pcrp",
						"Package Control: Remove Package"
					],
					[
						"pi",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 406.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": true,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/D/Autotest_Dev",
				"/D/Autotest_Dev/Config",
				"/D/Autotest_Dev/Lib",
				"/D/Autotest_Dev/Lib/Service",
				"/D/Autotest_Dev/Service",
				"/D/Autotest_Dev/Service/BSDM",
				"/D/Autotest_Dev/Service/BSDM/parameter_file",
				"/D/Autotest_Dev/Service/BSDM/solocase"
			],
			"file_history":
			[
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/TortoiseSVN/TortoiseSVN.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impFactory.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/bizBSDM.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMTr069.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/map_web_element.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMWeb.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_006.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_004.py",
				"/D/desktop/sublime-TortoiseSVN/TortoiseSVN.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SFTP/Context.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/TortoiseSVN.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/TortoiseSVN/Side Bar.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Installed Packages/TortoiseSVN.sublime-package",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SFTP/Tab Context.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SFTP/Side Bar.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-mousemap",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/TortoiseSVN/TortoiseSVN.sublime-settings",
				"/D/Autotest_Dev/Lib/Service/WAN/mapWan.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_003.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_005.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_007.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_002.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_DS_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_IP_Success_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Fail_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Fail_CTCU_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_OLT_Success_CM_001.py",
				"/D/Autotest_Dev/Service/BSDM/parameter_file/parameter.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-mirage.sublime-theme",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-mirage.sublime-color-scheme",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/Theme - Default/Default.sublime-theme",
				"/D/Autotest_Dev/Lib/general/hgu_telnet.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_DHCP_001.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_PPPOE_001.py",
				"/D/Autotest_Dev/Lib/Service/WAN/srvWANConnect.py",
				"/D/Autotest_Dev/Config/site_para.py",
				"/D/Autotest_Dev/Lib/Service/WAN/impWanConxWeb.py",
				"/D/Autotest_Dev/test.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/ayu/ayu-dark.sublime-color-scheme",
				"/D/Autotest_Dev/Service/BSDM/solocase/BSDM_WorkOrder_WO_INTERNET_PPPOE_002.py",
				"/D/Autotest_Dev/Lib/general/jsonlib.py",
				"/D/Autotest_Dev/Lib/Service/WAN/impWanConxTR069.py",
				"/D/Autotest_Dev/Lib/Service/WAN/bizWan.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_DS_001.py",
				"/D/Autotest_Dev/Lib/general/log/bizLog.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/test.py",
				"/D/Autotest_Dev/Lib/Service/BSDM/impBSDMCMD.py",
				"/D/Autotest_Dev/Config/JsonData/CMCC_pppwanbridge.txt",
				"/D/Autotest_Dev/Lib/Service/AC/impACWeb.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_LANSP_LAN_LANHAC_006_2PC.py",
				"/D/Autotest_Dev/Lib/general/stc/impHost.py",
				"/D/Autotest_Dev/Service/Global.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_LANSP_LANHIQ_001.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_White_004.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_Black_004.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"/D/Autotest_Dev/Lib/Service/AC/mapAC.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv6_Stateless_003.py",
				"/D/Autotest_Dev/Config/ver_para.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv6_Stateless_004.py",
				"/D/新建文件夹/test.py",
				"/D/新建文件夹/test2.py",
				"/D/新建文件夹/test3.py",
				"/D/新建文件夹/test4.py",
				"/D/Autotest/.gitignore",
				"/D/Autotest_Dev/.git/index",
				"/D/Autotest_Dev/.git/config",
				"/D/Autotest_Dev/sftp-config.json",
				"/D/Autotest_Dev/Lib/Service/Start/impStartCMD.py",
				"/D/Autotest_Dev/Service/AC/solocase/AC_PG_001.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStartWeb.py",
				"/D/Autotest_Dev/Lib/Service/TR069/bizTR069.py",
				"/D/Autotest_Dev/Lib/Service/AC/bizAC.py",
				"/D/Autotest_Dev/Lib/Service/AC/impACFactory.py",
				"/D/Autotest_Dev/Lib/Service/AC/impACTr069.py",
				"/D/Autotest_Dev/Lib/Service/Start/bizStart.py",
				"/D/Autotest_Dev/Lib/Service/Start/impConsle.py",
				"/D/Autotest_Dev/Lib/Service/Start/impOLT.py",
				"/D/Autotest_Dev/Lib/Service/Start/impParaWork.py",
				"/D/Autotest_Dev/Lib/Service/Start/impServiceReady.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStart.py",
				"/D/Autotest_Dev/Lib/Service/Start/impStartTr069.py",
				"/D/Autotest_Dev/Lib/Service/Start/intfServiceReady.py",
				"/D/Autotest_Dev/Lib/Service/Start/map_web_element.py",
				"/D/Autotest_Dev/Lib/general/stc/impDevice.py",
				"/D/Autotest_Dev/Lib/general/log/unilogintf.py",
				"/D/Autotest_Dev/Service/CyberApp/solocase/CyberApp_Diag_Inform_008.py",
				"/D/Autotest/Config/site_para.py",
				"/D/Autotest_Dev/Lib/Service/TR069/impTR069.py",
				"/D/Autotest/Lib/Service/__init__.py",
				"/D/Autotest_Dev/Service/CyberApp/solocase/CyberApp_Diag_Inform_004.py",
				"/D/Autotest_Dev/Lib/general/util_basic/absWeb.py",
				"/D/Autotest_Dev/Service/BSDM/solocase/test4.py",
				"/D/Autotest_Dev/test4.py",
				"/D/Autotest_Dev/name.txt",
				"/D/Autotest_Dev/test2.py",
				"/D/Autotest_Dev/Lib/general/util_basic/impWEBChn.py",
				"/D/Autotest_Dev/test3.py",
				"/D/Autotest_Dev/Service/Voice/solocase/VOIP_SYS_CFG_TR069_WAN_006.py",
				"/D/Autotest_Dev/Service/CMCCIP/solocase/CMCCIP_FP_TSP_TFS_001.py",
				"/D/Autotest_Dev/Lib/Service/CMCCIP/absTrafficMngFactory.py",
				"/D/Autotest_Dev/Service/SINTF/solocase/PT_IFP_TSP_TFS_001.py",
				"/D/Autotest_Dev/filename.xml",
				"/D/desktop/烽火/业务部署/电信工单/电信工单.jmx",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_DS_005.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_Multi_004.py",
				"/D/Autotest_Dev/Lib/general/stc/absDevice.py",
				"/D/Autotest_Dev/Lib/general/stc/absNetwork.py",
				"/D/Autotest_Dev/Lib/general/util_basic/testbed.py",
				"/D/desktop/烽火/业务部署/移动工单/省级数字家庭管理平台与网管系统间接口.jmx",
				"/D/Autotest_Dev/Lib/general/util_basic/impHGUProduct.py",
				"/D/Autotest_Dev/Service/WAN/solocase/WAN_RT_IPoE_SSIPv4_DHCP_015.py",
				"/D/Autotest_Dev/Service/Start/solocase/Start_UPGRD_NRM_RMSCENE_INTERBN_001.py"
			],
			"find":
			{
				"height": 32.0
			},
			"find_in_files":
			{
				"height": 218.0,
				"where_history":
				[
					"D:\\Autotest_Dev\\Service\\BSDM\\solocase",
					"<current file>",
					"D:\\Autotest_Dev\\Service\\BSDM",
					"D:\\Autotest_Dev\\Service\\BSDM\\",
					"D:\\Autotest_Dev\\",
					"D:\\Autotest_Dev\\Service\\BSDM\\",
					"D:\\Autotest_Dev\\Service\\BSDM",
					"D:\\Autotest_Dev\\Lib\\Service\\",
					"D:\\Autotest_Dev\\Service\\BSDM"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"if 'msg' in self.result and self.result['msg']",
					"注册超时！请检查线路后重试",
					"身份证与宽带账号不匹配！注册失败，请联系10000号",
					"身份证与宽带账号不匹配！请重试（剩余尝试次数：9）",
					"宽带帐号不存在！注册失败，请联系10000号",
					"宽带帐号不存在！请重试（剩余尝试次数：9）",
					"身份证不存在！注册失败，请联系10000号",
					"10、【check】观察页面提示，“身份证不存在！注册失败，请联系10000号”.",
					"身份证不存在！请重试（剩余尝试次数：9）",
					"4、【check】查看进度条是否停留在20",
					"3、在注册页面输入LOID或者密码var1进行注册；",
					"身份证不存在！请重试（剩余尝试次数：9）",
					"【check】观察页面提示，“身份证不存在！请重试（剩余尝试次数：9）”.",
					"7、模拟TR069平台下发Status值为1；",
					"merges",
					"['default']",
					"_regist_web_anhui",
					"TelnetCT",
					"switch_frame",
					"change_to",
					"self\\.get_element\\((.*?)\\)",
					"self\\.get_element\\((.*)\\)",
					"self.get_element",
					"self\\.get_element\\(",
					"self\\.get_element\\((.*)\\)",
					"self\\.get_element\\(.*\\)",
					"self.opt.cfg_acs_wan",
					"res = self.opt.cfg_acs_wan_and_del_other_wan()  # 修改管理WAN的vlan，删除其他WAN连接.\n        if res:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg'), '删除其他WAN连接成功，配置TR069的WAN连接参数与环境一致。')\n        else:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '删除其他WAN连接失败；')",
					"scroll_track_control",
					"reg_wait_time",
					"puck_control",
					"scroll",
					"rol",
					"com",
					"side",
					"ipv4地址获取方式的查询结果",
					"输入值为",
					"BSDM_WorkOrder_WO_INTERNET_PPPOE_002",
					"dhcp",
					"if 'process100' in self.result and self.result",
					"if 'process60' in self.result and self.result",
					"if 'process50' in self.result and self.result",
					"if 'process40' in self.result and self.result",
					"if 'process30' in self.result and self.result",
					"if 'process20' in self.result and self.result",
					"in self.result and self.result",
					"if 'process40' in self.result and '已获得管理IP，正在连接ITMS' in self.result['process40']['res']:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条未跳转至40%，“已获得管理IP，正在连接ITMS”；')",
					"if 'process30' in self.result and '注册OLT成功，正在获取管理IP' in self.result['process30']['res']:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；',\n                           '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；', '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；',\n                           '观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”；', '观察进度条未跳转至30%，“注册OLT成功，正在获取管理IP”；')",
					"if 'process20' in self.result and '正在注册OLT' in self.result['process20']['res']:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条停留在20%“正在注册OLT”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条没有停留在20%“正在注册OLT”')",
					"省注册OLT成功，正在获取管理IP",
					"self.assertion(AbsInCo('process'",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至60%'",
					"self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至40%'",
					"self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至40%'",
					"跳转至30%",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')",
					"if 'process100' in self.result and self.result['process100']['res'] == 'ITMS平台业务数据下发成功':\n            self.assertion(AbsInCo('process', 'success'), '9、【check】观察进度条跳转至100%，“ITMS平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.', '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】观察进度条跳转至100%，“ITMS平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“ITMS平台业务数据下发成功”.', '观察进度条未跳转至100%，“ITMS平台业务数据下发成功”.')",
					"if 'process60' in self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n            self.assertion(AbsInCo('process', 'success'), '8、【check】观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                           '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                           '观察进度条跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', '观察进度条未跳转至60%，“ITMS平台正在下发业务数据，请勿断电或拨光纤”；')",
					"if 'process50' in self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n            self.assertion(AbsInCo('process', 'success'), '7、【check】观察进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                           '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；', '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】观察进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                           '进度条跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；', '进度条未跳转至50%，“注册ITMS成功，等待ITMS平台下发业务数据”；')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接ITMS”；', '观察进度条未跳转至40%，“已获得管理IP，正在连接ITMS”；')",
					"if 'process30' in self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”',\n                           '进度条跳转至30%，“注册OLT成功，正在获取管理IP”', '进度条跳转至30%，“注册OLT成功，正在获取管理IP”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“注册OLT成功，正在获取管理IP”',\n                           '进度条跳转至30%，“注册OLT成功，正在获取管理IP”', '进度条未跳转至30%，“注册OLT成功，正在获取管理IP”')",
					"if 'process100' in self.result and self.result['process100']['res'] == '省级数字家庭管理平台业务数据下发成功':\n            self.assertion(AbsInCo('process', 'success'), '9、【check】观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.', '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.',\n                           '观察进度条跳转至100%，“省级数字家庭管理平台业务数据下发成功”.', '观察进度条未跳转至100%，“省级数字家庭管理平台业务数据下发成功”.')",
					"if 'process60' in self.result and self.result['process60']['res'] == '省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤':\n            self.assertion(AbsInCo('process', 'success'), '8、【check】观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                           '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                           '观察进度条跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', '观察进度条未跳转至60%，“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；')",
					"if 'process50' in self.result and self.result['process50']['res'] == '等待省级数字家庭管理平台下发业务数据':\n            self.assertion(AbsInCo('process', 'success'), '7、【check】观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；',\n                           '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；', '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；',\n                           '观察进度条跳转至50%，“等待省级数字家庭管理平台下发业务数据”；', '观察进度条跳未转至50%，“等待省级数字家庭管理平台下发业务数据”；')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':\n            self.assertion(AbsInCo('process', 'success'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；', '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                           '观察进度条跳转至40%，“已获得管理IP，正在连接省级数字家庭管理平台”；', '观察进度条未跳转至40%，显示“已获得管理IP，正在连接省级数字家庭管理平台”；')",
					"30",
					"if 'process30' in self.result and self.result['process30']['res'] == '正在获取管理IP':\n            self.assertion(AbsInCo('process', 'success'), '5、【check】观察进度条跳转至30%，“正在获取管理IP”',\n                           '进度条跳转至30%，“正在获取管理IP”', '进度条跳转至30%，“正在获取管理IP”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】观察进度条跳转至30%，“正在获取管理IP”',\n                           '进度条跳转至30%，“正在获取管理IP”', '进度条未跳转至30%，“正在获取管理IP”')",
					"if 'process20' in self.result and self.result['process20']['res'] == '正在注册OLT':\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条停留在20%“正在注册OLT”')\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%“正在注册OLT”；',\n                           '查看进度条停留在20%“正在注册OLT”', '进度条没有停留在20%“正在注册OLT”')",
					"if 'process40' in self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':",
					"2、失败提示标点符号与实际不一致",
					"IPv4",
					"ipv4",
					"IPv4",
					"ipv4",
					"lanport",
					"wband_name",
					"user",
					"            vectorargues[\"wband_name\"] = user\n",
					"user",
					"HGU_LOID",
					"psw",
					"vlan",
					"ipv6_prix",
					"i",
					"int",
					"vlan",
					"wan_query",
					"self.web.get_and_set_regist_status()  # 获取注册结果\n            if 'process50' in self.result:"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"menu[$1]",
					"res = self.opt.cfg_acs_wan()  # 修改管理WAN的vlan.\n        if res:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg'), '配置TR069的WAN连接参数与环境一致成功。')\n        else:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '配置TR069的WAN连接参数失败；')\n        res = self.opt.del_other_wan()  # 删除其他WAN连接.\n        if res:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg'), '删除其他WAN连接成功。')\n        else:\n            logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '删除其他WAN连接失败；')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process20' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')\n            if self.result and self.result['process20']['res'] == '正在注册OLT':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')",
					"注册OLT成功，正在获取管理IP",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '8、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '8、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '7、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '7、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接ITMS':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接ITMS”；',\n                               '显示“已获得管理IP，正在连接ITMS”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"self.assertion(AbsInCo('process', 'success'), '8、【check】查看进度条是否跳转至60%'",
					"self.assertion(AbsInCo('process', 'fail'), '7、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'success'), '7、【check】查看进度条是否跳转至50%'",
					"self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%'",
					"self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%'",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process100' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '9、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')\n            if self.result and self.result['process100']['res'] == 'ITMS平台业务数据下发成功':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台业务数据下发成功”；',\n                               '显示“ITMS平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台业务数据下发成功”；',\n                               '显示“ITMS平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '9、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == 'ITMS平台正在下发业务数据，请勿断电或拨光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；',\n                               '显示“ITMS平台正在下发业务数据，请勿断电或拨光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '注册ITMS成功，等待ITMS平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“注册ITMS成功，等待ITMS平台下发业务数据”；',\n                               '显示“注册ITMS成功，等待ITMS平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '6、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')\n            if self.result and self.result['process30']['res'] == '注册OLT成功，正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“注册OLT成功，正在获取管理IP”；',\n                               '显示“注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省注册OLT成功，正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '5、【check】查看进度条是否跳转至30%', '进度条跳转至30%', '进度条跳转至30%')",
					"if 'process100' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')\n            if self.result and self.result['process100']['res'] == '省级数字家庭管理平台业务数据下发成功':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省级数字家庭管理平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台业务数据下发成功”；',\n                               '显示“省级数字家庭管理平台业务数据下发成功”；', f\"显示“{self.result['process100']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至100%', '进度条跳转至100%', '进度条跳转至100%')",
					"if 'process60' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')\n            if self.result and self.result['process60']['res'] == '省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                               '显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；',\n                               '显示“省级数字家庭管理平台正在下发业务数据，请勿断电或拔光纤”；', f\"显示“{self.result['process60']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至60%', '进度条跳转至60%', '进度条跳转至60%')",
					"if 'process50' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')\n            if self.result and self.result['process50']['res'] == '等待省级数字家庭管理平台下发业务数据':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“等待省级数字家庭管理平台下发业务数据”；',\n                               '显示“等待省级数字家庭管理平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“等待省级数字家庭管理平台下发业务数据”；',\n                               '显示“等待省级数字家庭管理平台下发业务数据”；', f\"显示“{self.result['process50']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至50%', '进度条跳转至50%', '进度条跳转至50%')",
					"if 'process40' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')\n            if self.result and self.result['process40']['res'] == '已获得管理IP，正在连接省级数字家庭管理平台':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                               '显示“已获得管理IP，正在连接省级数字家庭管理平台”；', f\"显示“{self.result['process40']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“已获得管理IP，正在连接省级数字家庭管理平台”；',\n                               '显示“已获得管理IP，正在连接省级数字家庭管理平台”；', f\"显示“{self.result['process40']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否跳转至40%', '进度条跳转至40%', '进度条跳转至40%')",
					"if 'process30' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')\n            if self.result and self.result['process30']['res'] == '正在获取管理IP':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在获取管理IP”；',\n                               '显示“正在获取管理IP”；', f\"显示“{self.result['process30']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在30%', '进度条停留在30%', '进度条停留在30%')",
					"if 'process20' in self.result:\n            self.assertion(AbsInCo('process', 'success'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')\n            if self.result and self.result['process20']['res'] == '正在注册OLT':\n                self.assertion(AbsInCo('process', 'success'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n            else:\n                self.assertion(AbsInCo('process', 'fail'), '是否显示“正在注册OLT”；',\n                               '显示“正在注册OLT”；', f\"显示“{self.result['process20']['res']}”；\")\n        else:\n            self.assertion(AbsInCo('process', 'fail'), '4、【check】查看进度条是否停留在20%', '进度条停留在20%', '进度条停留在20%')"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "D:\\Autotest_Dev"
				}
			],
			"groups":
			[
				{
					"selected": 10,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CTCU_002.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8494,
								"regions":
								{
								},
								"selection":
								[
									[
										267,
										267
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										3,
										14,
										41,
										10,
										12,
										72,
										13,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 72.0,
								"zoom_level": 1.0
							},
							"stack_index": 10,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8741,
								"regions":
								{
								},
								"selection":
								[
									[
										7192,
										7192
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												7196,
												7197
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/single_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												7172,
												7173
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										10,
										9,
										25,
										31,
										8,
										192,
										80,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2736.0,
								"zoom_level": 1.0
							},
							"stack_index": 9,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_002.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11026,
								"regions":
								{
								},
								"selection":
								[
									[
										10713,
										10713
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										14,
										36,
										13,
										126,
										226,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 4272.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_003.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8751,
								"regions":
								{
								},
								"selection":
								[
									[
										8041,
										8041
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										20,
										23,
										8,
										120,
										173,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3384.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_004.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10968,
								"regions":
								{
								},
								"selection":
								[
									[
										10106,
										10106
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										25,
										55,
										1,
										11,
										151,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 4169.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_005.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8751,
								"regions":
								{
								},
								"selection":
								[
									[
										7993,
										7993
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										29,
										44,
										12,
										134,
										18,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2952.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_006.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11026,
								"regions":
								{
								},
								"selection":
								[
									[
										10418,
										10418
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												10417,
												10418
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												10416,
												10417
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										31,
										9,
										4,
										22,
										12,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3977.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CTCU_007.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 10358,
								"regions":
								{
								},
								"selection":
								[
									[
										1852,
										1852
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												1853,
												1854
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/single_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												1844,
												1845
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										6,
										11,
										15,
										34,
										3,
										3,
										83,
										28,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 1488.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 8,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Fail_CM_002.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 9908,
								"regions":
								{
								},
								"selection":
								[
									[
										9006,
										9040
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												9039,
												9040
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												8844,
												8845
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										5,
										31,
										14,
										59,
										28,
										4,
										70,
										187,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3449.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 9,
							"file": "/D/Autotest_Dev/Service/BSDM/solocase/BSDM_Registerbar_ACS_Success_CM_002.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8532,
								"regions":
								{
								},
								"selection":
								[
									[
										7265,
										7311
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										229,
										7,
										1,
										18,
										11,
										56,
										2,
										116,
										139,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"incomplete_sync": null,
									"remote_loading": false,
									"synced": false,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2873.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 10,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 14170,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												388,
												434
											],
											[
												992,
												1038
											],
											[
												1459,
												1505
											],
											[
												1936,
												1982
											],
											[
												2525,
												2571
											],
											[
												3146,
												3192
											],
											[
												3705,
												3751
											],
											[
												4262,
												4308
											],
											[
												4869,
												4915
											],
											[
												5467,
												5513
											],
											[
												6026,
												6072
											],
											[
												6573,
												6619
											],
											[
												7180,
												7226
											],
											[
												7806,
												7852
											],
											[
												8365,
												8411
											],
											[
												8922,
												8968
											],
											[
												9522,
												9568
											],
											[
												10065,
												10111
											],
											[
												10628,
												10674
											],
											[
												11254,
												11300
											],
											[
												11878,
												11924
											],
											[
												12522,
												12568
											],
											[
												13146,
												13192
											],
											[
												13755,
												13801
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content"
									],
									"default_dir": "D:\\Autotest_Dev\\Service\\BSDM\\solocase",
									"detect_indentation": false,
									"incomplete_sync": null,
									"line_numbers": false,
									"output_tag": 1,
									"result_base_dir": "",
									"result_file_regex": "^([^ \t].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 3384.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 32.0
			},
			"input":
			{
				"height": 71.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.Terminus":
			{
				"height": 174.0
			},
			"output.Terminus Build Results":
			{
				"height": 391.0
			},
			"output.exec":
			{
				"height": 503.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"output.sftp":
			{
				"height": 158.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-32000,-32000,-1,-1,724,183,-7,1407",
			"project": "",
			"replace":
			{
				"height": 60.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"BSDM_Registerbar_ACS_Fail_CTCU_001",
						"Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Fail_CTCU_001.py"
					],
					[
						"BSDM_Registerbar_ACS_Success_CTCU_002",
						"Service\\BSDM\\solocase\\BSDM_Registerbar_ACS_Success_CTCU_002.py"
					],
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"bizbsdm",
						"Lib\\Service\\BSDM\\bizBSDM.py"
					],
					[
						"dsfailctcu",
						"Service\\BSDM\\solocase\\BSDM_Registerbar_DS_Fail_CTCU_001.py"
					],
					[
						"glob",
						"Service\\Global.py"
					],
					[
						"sitepa",
						"Config\\site_para.py"
					],
					[
						"cmccipfplansp00",
						"Service\\CMCCIP\\solocase\\CMCCIP_FP_LANSP_LANHIQ_001.py"
					],
					[
						"macfiw",
						"Service\\AC\\solocase\\AC_MACFilter_White_004.py"
					],
					[
						"ver",
						"Config\\ver_para.py"
					],
					[
						"wan003",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv6_Stateless_003.py"
					],
					[
						"pg",
						"Service\\AC\\solocase\\AC_PG_001.py"
					],
					[
						"impde",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"VOIP_SYS_CFG_TR069_WAN_006 ",
						"Service\\Voice\\solocase\\VOIP_SYS_CFG_TR069_WAN_006.py"
					],
					[
						"imp",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"tfs_001",
						"Service\\CMCCIP\\solocase\\CMCCIP_FP_TSP_TFS_001.py"
					],
					[
						"jsonl",
						"Lib\\general\\jsonlib.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"WAN_RT_IPoE_SSIPv4_DHCP_015.py",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv4_DHCP_015.py"
					],
					[
						"imphost",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"dslit002",
						"Service\\WAN\\solocase\\WAN_RT_IPoE_SSIPv6_DSLite_002.py"
					],
					[
						"test",
						"test.py"
					],
					[
						"telnet",
						"Service\\AC\\solocase\\AC_Telnet_001.py"
					],
					[
						"AC_URLFilter_White_004 ",
						"Service\\AC\\solocase\\AC_URLFilter_White_004.py"
					],
					[
						"AC_TwoFilter_White_003",
						"Service\\AC\\solocase\\AC_TwoFilter_White_003.py"
					],
					[
						"urlfiw",
						"Service\\AC\\solocase\\AC_URLFilter_White_003.py"
					],
					[
						"vbind002.",
						"Service\\WAN\\solocase\\WAN_Vbind_002.py"
					],
					[
						"impho",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"testb",
						"Lib\\general\\util_basic\\testbed.py"
					],
					[
						"AC_URLFilter_Black_002",
						"Service\\AC\\solocase\\AC_URLFilter_Black_002.py"
					],
					[
						"sitep",
						"Config\\site_para.py"
					],
					[
						"AC_MACFilter_Black_006",
						"Service\\AC\\solocase\\AC_MACFilter_Black_006.py"
					],
					[
						"bizac",
						"Lib\\Service\\AC\\bizAC.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impcon",
						"Lib\\Service\\Start\\impConsle.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"biztr",
						"Lib\\Service\\TR069\\bizTR069.py"
					],
					[
						"impdevi",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"diag001",
						"Service\\CyberApp\\solocase\\CyberApp_Diag_Ping_001.py"
					],
					[
						"impdev",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"imph",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"imphgu",
						"Lib\\general\\util_basic\\impHGUProduct.py"
					],
					[
						"bizwan",
						"Lib\\Service\\WAN\\bizWan.py"
					],
					[
						"imppara",
						"Lib\\Service\\Start\\impParaWork.py"
					],
					[
						"WAN_RT_PPPoE_SSIPv4_009",
						"Service\\WAN\\solocase\\WAN_RT_PPPoE_SSIPv4_009.py"
					],
					[
						"biza",
						"Lib\\Service\\AC\\bizAC.py"
					],
					[
						"test.py",
						"Lib\\general\\test.py"
					],
					[
						"bizvoice",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"acsrec005.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_005.py"
					],
					[
						"oltreco002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_OLT_RECOV_002.py"
					],
					[
						"pg_",
						"Service\\AC\\solocase\\AC_PG_001.py"
					],
					[
						"imphos",
						"Lib\\general\\stc\\impHost.py"
					],
					[
						"impactr",
						"Lib\\Service\\AC\\impACTr069.py"
					],
					[
						"g",
						"Service\\Global.py"
					],
					[
						"acsreco",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_009.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"AC_MACNum_001",
						"Service\\AC\\solocase\\AC_MACNum_001.py"
					],
					[
						"AC_MACFilter_Black_004",
						"Service\\AC\\solocase\\AC_MACFilter_Black_004.py"
					],
					[
						"hgu",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"hgute",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"htu",
						"testData\\version\\HG6543C1\\CT\\Hubei\\targetversion\\local_frk_image_UniPon_20200401230806.img"
					],
					[
						"servicere",
						"Lib\\Service\\Start\\impServiceReady.py"
					],
					[
						"jsol",
						"Lib\\general\\jsonlib.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 345.0,
				"last_filter": "setpppwan",
				"selected_items":
				[
					[
						"setpppwan",
						"set_pppwanbridge"
					],
					[
						"set_dhcpwan",
						"set_dhcpwanroute"
					],
					[
						"enabletelnet",
						"enable_telnet"
					]
				],
				"width": 580.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 465.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 319,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
