{
	"folder_history":
	[
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3",
		"/C/Users/cienet/Desktop/hgu_autotest",
		"/C/Python/Lib/site-packages/selenium",
		"//10.182.33.15/d$/FHATP/user/hgu_autotestc103",
		"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages",
		"//10.182.34.15/d$/FHATP/user/hgu_autotestc103",
		"/C/Python/Lib/site-packages/paramiko",
		"/C/Users/cienet/Desktop/py_test",
		"/C/Users/cienet/Desktop/daily_test_stable"
	],
	"last_version": 3211,
	"last_window_id": 43,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 480.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"evencode_",
						"evencode_0boot"
					],
					[
						"E",
						"ErrorInCalling"
					],
					[
						"Olt",
						"OLT"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"dire",
						"direction"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcin",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/commands.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/DocblockrPython.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/Main.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/formatters/registry.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impSTA.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/absInfoCode.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_Telnet_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_016.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_017.py",
				"/C/Users/cienet/AppData/Roaming/Foxmail7/Temp-25940-20201009090046/Attach/checkrate.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACWeb.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impOLT.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/bizAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/mapAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impConsle.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/bizLog.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_OLT_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_ACS_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/.gitignore",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_UPGRD_ABNR_Local_SDWP_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Global.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/tcsbase.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impHost.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/parameter_file/parameter.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/__init__.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_RANDOM_001.py"
			],
			"find":
			{
				"height": 38.0
			},
			"find_in_files":
			{
				"height": 285.0,
				"where_history":
				[
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<open folders>",
					"<open files>",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\Start\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\Start\\solocase",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"【配置失败】",
					"# 删除WAN连接",
					"# 开始打流",
					"# 生成ACS对象",
					"创建路由WAN",
					"self.sleep = ac_para.wait  # 等待时间",
					"self.dns = site_para.ipv4_pre_dns  # DNS",
					"self.gw = ac_para.static_wan_gw  # 网关",
					"self.mask = ac_para.static_wan_mask  # 掩码",
					"# wan IP",
					"# 目的IP",
					"# 源IP1",
					"# 目的MAC",
					"# 源MAC",
					"# 类型",
					"# 删除WAN连接",
					"# 打开网页",
					"# 刷新dns缓存",
					"wan_query_ipv4(self.s1.get_name())  # 获取WAN状态",
					"# 创建路由WAN",
					"self.wait = ac_para.wait  # 等待时间",
					"self.vlan = site_para.vlan_ipv4_dhcp  # vlan",
					"self.Var8 = 'www.baidu6.com'  # 百度",
					"self.Var7 = 'www.baidu5.com'  # 新浪",
					"self.Var6 = 'www.baidu4.com'  # 百度",
					"self.Var5 = 'www.baidu3.com'  # 新浪",
					"self.Var4 = 'www.baidu2.com'  # 百度",
					"self.Var3 = 'www.baidu1.com'  # 新浪",
					"self.Var2 = site_para.web_baidu  # 百度",
					"self.Var1 = site_para.web_sina  # 新浪",
					"abort",
					"self.pc = self.device1.impsta(ip=self.ip, user=self.user, pwd=self.pwd)",
					"self.wanconx.delete()  # 删除WAN",
					"# 实例化ACS",
					"ping(self.Var2)  # ping网址一百度",
					"刷新dns缓存",
					"ping网址",
					"self.pwd = ac_para.pwd  # PC2密码",
					"self.user = ac_para.user  # PC2账户",
					"self.ip = ac_para.ip  # PC2IP",
					"self.switch2 = '(.*?)'\\n",
					"self.switch1 = '开'  # 开关",
					"ping网址",
					"刷新dns缓存",
					"wo1.execute()  # 执行用例",
					"logger.show_opr_one_step(AbsInCo('process', 'fail'), '【配置失败】，",
					"self.var1 = '192.168.1.1'  # 管理IP",
					"rxrate = packet_loss_judge1(self.stc1.report_stat(\"{}.*\".format(i)))",
					"prepare",
					"logger.show_opr_one_step(AbsInCo('prepare', 'fail'), '【配置失败】，",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '【配置成功】，",
					"logger.show_opr_one_step(AbsInCo('prepare', 'success'), '【配置成功】，",
					"if result1.count(1) == len(result1) and result2.count(0) == len(result2):",
					"if result1.count(0) == len(result1) and result2.count(1) == len(result2):",
					"self.stc1.stop_traffic()  # 停止打流",
					"result2.append(rxrate)  # 最后一条流添加到列表2",
					"result1.append(rxrate)",
					"result2.append(rxrate)",
					"self.stc1.start_traffic()  # 发送流",
					"# 使能IP过滤",
					"# 实例化ImpACFactory",
					"creatres = self.wanconx.create()  # 创建WAN连接",
					"self.s1.set_wan_ipv4('static', [self.wanip, self.mask, self.gw, self.dns, ''])  # 设置静态IP",
					"self.s1.set_vlan('', self.vlan, '')  # 设置vlan_id",
					"self.s1.set_en_vlan(\"en\")  # 启用VLAN",
					"self.s1.set_nat(\"en\")  # 使能NAT",
					"self.s1 = AbsWANConnect()  # 实例化AbsWANConnect类",
					"self.s1.set_nat(\"en\")  # 使能NAT",
					"self.num = (.*?)  # 流数量",
					"self.num = 11  # 流数量",
					"self.dns = site_para.ipv4_pre_dns  # wan dns",
					"self.gw = ac_para.static_wan_gw  # wan gateway",
					"self.mask = ac_para.static_wan_mask  # WAN连接的掩码",
					"self.mask = ac_para.static_wan_mask  # wan mask",
					"# 目的IP结束",
					"# 目的IP开始",
					"self.var3 = '(.*?)'  # 过滤协议",
					"# 源IP结束",
					"# 源IP开始",
					"self.types = '(.*?)'  # 过滤类型",
					"self.type = '(.*?)'  # 过滤类型",
					"self.ori = '(.*?)'  # 过滤方向",
					"self.direction = '(.*?)'  # 过滤方向",
					"self.direction = '(.*？)'  # 过滤方向",
					"self.direction = '（.*？）'  # 过滤方向",
					"self.web.login\\(\\)\\n",
					"self.web.login('hidden')",
					"self.enable_hidden_web\\(\\)\\n",
					"AbsHGUProduct\\(\\).enable_telnet\\(\\)\\n",
					"page_source = self.driver.get_source\\(\\)\\n",
					"self.web.login\\(user\\)\\n",
					"self.web.get_url\\(\\)\\n",
					"self.web.login('hidden')  # 登录",
					"AbsHGUProduct().enable_telnet()  # 使能telnet",
					"self.switch_frame\\(direction=False\\)\\n",
					"self.web.login()  # 登录",
					"self.cfg",
					"Start_RECOV_RRECOV_OLT_CM_001",
					"user",
					"foramt",
					"res = ImpACFactory().create_product_acswitch(cfg='WEB').operate_firewall()",
					"ClassName",
					"Start_RECOV_Local_CM_Key_001",
					"self.var1 = '\\d{2,3}.\\d{2,3}.\\d{1,2}.\\d{3}'",
					"self.vlan = Global.olt_uplink_vlan1  # VLAN",
					"ping(self.Var1)",
					"ping",
					"Start_Reboot_Remote_APP_RECOV_003",
					"Start_Reboot_Remote_APP_RECOV_002",
					"sleep_time",
					"mgnt_ip",
					"file",
					"# 实例化对象",
					"# 实例化对象  # 实例化对象",
					"self.other = ImpStartOther()  # 实例化对象",
					"# 实例化对象  # 实例化操作对象",
					"# 等待设备重启  # 等待ONU重启完成",
					"# 判断设备是否重启完成  # 判断ONU是否重启完成",
					"Global",
					"连接模式为{}'.format\\(self.type1\\)\\n",
					"连接模式为{}'.format(self.type1)",
					"连接模式为.*'\\)",
					", result1.count(1),",
					"(len(result1) - result1.count(0)",
					"result1.count(0) == 0",
					"len(result2) - result2.count(0)",
					"load=int(int(self.load) / self.num)",
					"logger.show_opr_one_step(AbsInCo('process', 'success'), '【配置成功】，"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"# 删除WAN连接配置",
					"# 开始发送流",
					"# 实例化ACS对象",
					"创建路由类型WAN",
					"self.sleep = ac_para.wait  # 配置等待时间",
					"self.dns = site_para.ipv4_pre_dns  # 静态WAN连接的DNS",
					"self.gw = ac_para.static_wan_gw  # 静态WAN连接的网关",
					"self.mask = ac_para.static_wan_mask  # 静态WAN连接的掩码",
					"# 静态WAN连接的IP",
					"# 目的IP地址信息",
					"# 源IP地址信息",
					"# 目的MAC地址信息",
					"# 源MAC地址信息",
					"# 过滤策略类型",
					"# 删除WAN连接配置",
					"# 通过浏览器打开网页",
					"# 刷新dns缓存信息",
					"wan_query_ipv4(self.s1.get_name())  # 获取WAN连接状态",
					"# 创建路由类型WAN",
					"self.wait = ac_para.wait  # 等待配置生效的时间",
					"self.vlan = site_para.vlan_ipv4_dhcp  # wan连接的vlan信息",
					"self.Var8 = 'www.baidu6.com'  # 网址八百度",
					"self.Var7 = 'www.baidu5.com'  # 网址七百度",
					"self.Var6 = 'www.baidu4.com'  # 网址六百度",
					"self.Var5 = 'www.baidu3.com'  # 网址五百度",
					"self.Var4 = 'www.baidu2.com'  # 网址四百度",
					"self.Var3 = 'www.baidu1.com'  # 网址三百度",
					"self.Var2 = site_para.web_baidu  # 网址二百度",
					"self.Var1 = site_para.web_sina  # 网址一新浪",
					"qry-quit",
					"self.pc = self.device1.impsta(ip=self.ip, user=self.user, pwd=self.pwd)  # 登录到第二台电脑",
					"self.wanconx.delete()  # 删除WAN连接配置",
					"# 实例化ACS对象",
					"ping(self.Var2)  # ping网址二百度",
					"刷新dns缓存信息",
					"ping网址一百度",
					"self.pwd = ac_para.pwd  # 第二台电脑的密码",
					"self.ip = ac_para.ip  # 第二台电脑的账户",
					"self.ip = ac_para.ip  # 第二台电脑的IP",
					"self.switch2 = '$1'  # 过滤策略开关",
					"self.switch1 = '开'  # 过滤策略开关",
					"ping网址一百度",
					"刷新dns缓存信息",
					"wo1.execute()  # 执行测试用例",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '",
					"self.var1 = '192.168.1.1'  # 网关的管理IP",
					"rxrate = packet_loss_judge1(self.stc1.report_stat(\"{}.*\".format(i)))  # 获取打流结果",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg-quit'), '",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '【配置成功】，",
					"if result1.count(1) == len(result1) and result2.count(0) == len(result2):  # 过滤规则内的数据流发送流量等于接收流量，其他数据流接收流量为0",
					"if result1.count(0) == len(result1) and result2.count(1) == len(result2):  # 过滤规则内的数据流接收流量为0，其他数据流发送流量等于接收流量",
					"self.stc1.stop_traffic()  # 停止发送数据流",
					"result2.append(rxrate)  # 过滤规则外的打流结果添加到列表2",
					"result1.append(rxrate)  # 过滤规则内的打流结果添加到列表1",
					"result2.append(rxrate)  # 最后一条流添加到列表2",
					"self.stc1.start_traffic()  # 发送数据流",
					"# 使能IP过滤策略",
					"# 实例化ImpACFactory对象",
					"creatres = self.wanconx.create()  # 下发WAN连接配置",
					"self.s1.set_wan_ipv4('static', [self.wanip, self.mask, self.gw, self.dns, ''])  # 设置静态WAN连接的IP",
					"self.s1.set_vlan('', self.vlan, '')  # 设置WAN连接的VLAN ID",
					"self.s1.set_en_vlan(\"en\")  # 启用WAN连接的VLAN功能",
					"self.s1.set_nat(\"en\")  # 使能NAT转换功能",
					"self.s1 = AbsWANConnect()  # 实例化AbsWANConnect对象",
					"self.num = $1  # 发送流的数量",
					"self.dns = site_para.ipv4_pre_dns  # 静态WAN连接的DNS",
					"self.gw = ac_para.static_wan_gw  # 静态WAN连接的网关",
					"self.mask = ac_para.static_wan_mask  # 静态WAN连接的掩码",
					"self.mask = ac_para.static_wan_mask  # WAN连接的掩码",
					"# 目的IP地址结束",
					"# 目的IP地址开始",
					"self.var3 = '$1'  # 过滤策略协议",
					"# 源IP地址结束",
					"# 源IP地址开始",
					"self.types = '$1'  # 过滤策略类型",
					"self.type = '$1'  # 过滤策略类型",
					"self.ori = '$1'  # 过滤策略方向",
					"self.ori = '$1'  # 过滤方向",
					"self.direction = '$1'  # 过滤策略方向",
					"self.web.login()  # 登录网关设备\\n",
					"self.web.login('hidden')  # 登录隐藏页面\\n",
					"self.enable_hidden_web()  # 使能设备隐藏页面\\n",
					"AbsHGUProduct\\(\\).enable_telnet\\(\\)  # 使能设备telnet功能\\n",
					"page_source = self.driver.get_source()  # 获取网页源码\\n",
					"self.web.login(user)  # 登录网关设备\\n",
					"self.web.get_url()  # 打开网关登录设备\\n",
					"self.web.login('hidden')  # 登录隐藏页面",
					"AbsHGUProduct().enable_telnet()  # 使能telnet的功能",
					"self.switch_frame(direction=False)  # 切换到主框架\\n",
					"self.web.login()  # 登录网关设备",
					"self.vlan = Global.olt_uplink_vlan1  # 数据业务的VLAN",
					"# 实例化对象",
					"# 等待设备重启",
					"# 判断设备是否重启完成",
					"# 判断设备是否重启完成  # 判断ONU是否重启完成",
					"连接模式为{}'.format(self.type1))",
					"连接模式为{}'.format(self.type1)\\n",
					", (result1.count(1),",
					"result1.count(1)",
					"result1.count(1) == len(result1)",
					"result2.count(1)",
					"load=str(int(int(self.load) / self.num))",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg'), '",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '",
					"self.lan = ac_para.lan  # 打流对应的LAN口",
					"and result2.count(1) == len(result2):",
					"self.wanip = ac_para.static_wan_ip  # 静态WAN连接的IP",
					"load=int(int(self.load) / self.num)",
					"self.lanintf = ac_para.lan  # 打流对应的LAN口\\n",
					"self.cfg = '$1'  # 业务配置方式\n        self.load = ac_para.load  # 数据流流量\n        self.lanintf = ac_para.lan  # 打流对应的LAN口",
					"self.traffic.create_traffic_raw(load=self.load, lanintf=self.lan, ",
					"result != 'ErrorInCalling':  # 配置下发成功",
					"flag = 'done'  # 初始化flag为done，默认返回done",
					"flag = \"ErrorInCalling\"  # 配置失败时返回ErrorInCalling",
					"self.cfg = '$1'  # 业务配置方式",
					"self.evencode = start_para.event_code_1boot  # Inform报文事件码1 boot",
					"\"",
					"",
					"self.regist_data = start_para.regist_data  # 注册ACS平台状态数据",
					"self.sn = start_para.sn  # 注册ACS平台使用的SN",
					"self.regist_default_data = start_para.regist_default_data  # 逻辑ID默认配置数据",
					"self.regist_data = start_para.regist_data  # 逻辑ID配置数据",
					"self.web.regist(self.sn)  # 将ONU注册上平台\\n",
					"if self.web.regist(self.sn):  # 将ONU注册上平台",
					"ntp = self.web.check_ntp(default=self.ntp_default_data)  # 检查NTP配置是否一致",
					"host = self.web.check_virtual_host(default=self.host_default_data)  # 检查虚拟主机配置是否一致",
					"limit = self.cmd.check_user_limit(default=self.user_limit_default_data)  # 检查用户数量限制是否一致"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 38.0
			},
			"input":
			{
				"height": 71.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 297.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 72.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"ipfiblac3",
						"Service\\AC\\solocase\\AC_IPFilter_Black_003.py"
					],
					[
						"global",
						"Service\\Global.py"
					],
					[
						"gl",
						"Service\\Global.py"
					],
					[
						"bizvo",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"logintf",
						"Lib\\general\\log\\unilogintf.py"
					],
					[
						"bizs",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"bizstar",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impweb",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"Start_Reboot_Remote_ACS_RECOV_002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_002.py"
					],
					[
						"tc",
						"testData\\AC_CT\\testCase.lst"
					],
					[
						"tcsb",
						"Lib\\general\\tcsbase.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 296.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 640.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "模块一： 配置WAN连接\n模块二： 检查WAN连接配置\n模块三： 配置组播业务\n模块四： 配置语音业务\n模块五： 查询语音注册状态\n模块六： DHCP业务是否工作\n模块七： PPPOE业务是否工作\n模块八： VOIP业务是否工作\n模块九： IGMP业务是否工作\n模块十： NTP业务是否恢复\n模块十一： PPPOE业务是否恢复\n模块十二： WAN业务是否恢复\n模块十三： ACS方式重启设备\n模块十四： 电源重启设备\n模块十五： 修改NTP配置。\n模块十六： 修改插件配置。\n模块十七： 检查插件配置。\n模块十八： ACS获取版本信息。\n模块十九： PING操作。\n模块二十： 长PING操作\n模块二十一： 长PING结果检查\n模块二十二： 抓取infrom报文\n模块二十三： 抓取组播查询报文\n",
					"settings":
					{
						"buffer_size": 348,
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/烽火/系统启动/系统启动特性步骤疑问讨论结果.txt",
					"settings":
					{
						"buffer_size": 5382,
						"encoding": "UTF-8",
						"line_ending": "Unix",
						"name": "1、是否可以按照预置条件里面的WAN类型配置WAN连接。 具体业务怎么验证？  预配置里面数据业务获"
					}
				},
				{
					"contents": "1、需要提供OLT命令，OLT命令重启ONU，恢复出厂，升级ONU，查看注册状态.\n2、ACS查看ONU在线状态，节点是什么？使用ACS读取ONU的版本来实现，是否触发反向链接，是否可以代替这个功能，需要联系直真确认.",
					"settings":
					{
						"buffer_size": 109,
						"line_ending": "Unix",
						"name": "1、需要提供OLT命令，OLT命令重启ONU，恢复出厂，升级ONU，查看注册状态."
					}
				},
				{
					"contents": "\n\nself.cfg = '(.*)'  # (.*)\\n\n\nself.cfg = '$1'  # 业务配置方式\n        self.load = ac_para.load  # 数据流流量\n        self.lanintf = ac_para.lan  # 打流对应的LAN口\n\n\n        self.type1 = '路由'  # WAN连接模式为路由",
					"settings":
					{
						"buffer_size": 188,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Advanced Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/c/Python/lib/site-packages/pexpect/__init__.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/BRDGMC/bizBRDGMC.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/hgu_telnet.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Config/site_para.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/absHGUProduct.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/impWEBChn.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/SublimeCodeIntel.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"重启",
					"WEB维护账户",
					"模块"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 348,
								"regions":
								{
								},
								"selection":
								[
									[
										161,
										161
									]
								],
								"settings":
								{
									"auto_name": "",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"default_dir": "\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Lib\\Service\\Start",
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/cienet/Desktop/烽火/系统启动/系统启动特性步骤疑问讨论结果.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5382,
								"regions":
								{
								},
								"selection":
								[
									[
										1306,
										1306
									]
								],
								"settings":
								{
									"auto_name": "1、是否可以按照预置条件里面的WAN类型配置WAN连接。 具体业务怎么验证？  预配置里面数据业务获",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										21,
										16,
										26,
										32,
										4,
										0,
										78,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 109,
								"regions":
								{
								},
								"selection":
								[
									[
										109,
										0
									]
								],
								"settings":
								{
									"auto_name": "1、需要提供OLT命令，OLT命令重启ONU，恢复出厂，升级ONU，查看注册状态.",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"default_dir": "C:\\Users\\cienet\\Desktop\\烽火\\系统启动",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 3,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 188,
								"regions":
								{
								},
								"selection":
								[
									[
										188,
										188
									]
								],
								"settings":
								{
									"auto_name": "",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"default_dir": "C:\\Users\\cienet\\Desktop\\烽火\\系统启动",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 41.0
			},
			"input":
			{
				"height": 59.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 391.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,2,-32000,-32000,-1,-1,664,497,125,1211",
			"project": "",
			"replace":
			{
				"height": 78.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 295.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 30,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/cienet/Desktop/py_test/assets/console.py",
					"settings":
					{
						"buffer_size": 749,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/py_test/conftest.py",
					"settings":
					{
						"buffer_size": 874,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/py_test/pytest.ini",
					"settings":
					{
						"buffer_size": 43,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/py_test/test_py_001.py",
					"settings":
					{
						"buffer_size": 994,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/py_test/bbb.py",
					"settings":
					{
						"buffer_size": 321,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/py_test/test001.py",
					"settings":
					{
						"buffer_size": 1057,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/烽火/系统启动/资料/模块.py",
					"settings":
					{
						"buffer_size": 1955,
						"encoding": "UTF-8",
						"line_ending": "Windows",
						"name": "模块一： 配置WAN连接"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/烽火/系统启动/资料/test.py",
					"settings":
					{
						"buffer_size": 782,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"contents": "1、是否可以按照预置条件里面的WAN类型配置WAN连接。 具体业务怎么验证？\n2、业务恢复方法（数据（路由wan，桥接wan），组播，语音，NTP怎么才算恢复），打流模型需要评审。\n3、ONU是否重启，重启成功怎么判断。\n4、ping域名之前是否需要DNS解析。\n5、测试用例样本点使用的ACS平台，是否可以理解为直真平台。\n6、【check】在CFG ONU操作日志中查看重启reboot日志时间和ONU启动后1boot inform上报时间间隔T1(通过WEB/cmd开启端口镜像抓包获取inform)。  这个步骤怎么实现？\n7、测试用例使用OLT命令重启ONU，恢复出厂，升级ONU，查看注册状态，命令是什么？。\n8、升级补丁相关测试用例，需要测试补丁功能，怎么升级？ 怎么测试补丁功能。\n9、开关物理断电ONU重启，是否可以使用断电设备实现。\n10、组播查询报文怎么抓？\n11、命令行启用插件，查询插件是否启动，插件是否注册，怎么实现，怎么判断？\n12、Start_Reboot_Local_Switch_RECOV_012，Start_Reboot_Remote_ACS_RECOV_012，是否自动化。通过ONU本地/OLT命令行查询ONU认证状态，怎么实现？\n13、ACS查看ONU在线状态，WEB查看ONU在线状态具体怎么查看？\n14、2.4G、5G无线上网业务正常（ping通外网Var不丢包），2.4G，5G是否都要测试？ 实验室环境下怎么怎么保证无线不丢包？\n15、设备配置无丢失（涉及多个用例），指哪些配置，怎么检查，Start_Reboot_ABNORMAL_REPEAT_RANDOM_001。  检查各设备配置(WAN、TR069、语音、组播)是否丢失，指哪些配置，怎么检查，Start_Reboot_ABNORMAL_REPEAT_SHORT_002。\n16、Start_Reboot_ABNORMAL_REPEAT_RANDOM_001 ，断电时间为上电开始后的20秒--60秒之间随机断电，60秒时间第4、 5步的业务都还没有恢复，预期结果为业务正常。   这个脚本需要执行5000次\n17、循环执行多次的脚本，次数是否可以改小，比如Start_Reboot_ABNORMAL_REPEAT_RANDOM_001 运行一次超过10分钟，循环5000次，预计时间（5000*10/60/24=34.7天）\n18、Start_Reboot_ABNORMAL_REPEAT_FLASH_001，循环创建WAN连接，第1步和第2步中间需要删除WAN连接。 实际测试步骤没有。\n19、ACS检查设备版本号及编译时间是否为升级后的版本，ACS怎么查询编译时间？通过版本号怎么确定是否升级成功？（版本都是同一个版本号）\n20、连接LAN1和SSID的PC 均可ping通外网不丢包。LAN2口下挂PC可收到组播视频流。   步骤明确指定了LAN口，与测试环境不一致。 以哪个为准？\n21、Start_UPGRD_NRM_RMSCENE_TR069_001，升级操作，移动原尺寸升级safe镜像，移动小尺寸升级GWOV+felix镜像，联通智能网关升级带cferom的.w镜像，电信天翼2.0/3.0升级safe镜像，移动原尺寸升级localos镜像（特殊升级需求升级local镜像），移动小尺寸升级GWOV+felix（升级插件）镜像，联通智能网关远程升级不带cferom的.w镜像，电信天翼2.0/3.0升级local镜像，怎么确认升级哪种镜像？请提供对应镜像。\n22、Start_UPGRD_NRM_RMSCENE_TR069_001，在ACS平台上找到设备，查询设备在线，执行远程升级操作（点击远程升级按钮，选择待升级的版本，执行升级），查看设备下的串口信息；目前平台没有升级接口，怎么实现？串口信息指什么信息？\n23、Start_UPGRD_NRM_RMSCENE_TR069_001，（如果平台可以显示升级状态，查看设备的升级状态是否成功），平台是否支持，是否有接口可以调用去查询升级状态。\n24、Start_UPGRD_NRM_RMSCENE_TR069_001，（自动化测试需要加入压力验证次数：不少于100次）是指单个步骤，还是只整个测试或者某几个步骤？\n25、Start_UPGRD_NRM_RMSCENE_TR069_001，根据分省版本要求配置，仅开通TR069业务功能；预配置与实际环境不一致以哪个为准？\n26、Start_UPGRD_NRM_RMSCENE_TR069_001，本地查看TR069业务是否正常,TR069 WAN能否拿到地址，WEB页面查看上报平台是否成功。\n27、镜像文件下载过程中ONU断电/写FLASH过程中ONU断电/，查看升级结果；怎么判断是下载过程/写FLASH过程，怎么查看升级结果？\n28、非镜像文件、头文件错误镜像、CRC正确文件内容错误的升级镜像、CRC校验错误的镜像文件、中文命名的镜像，这些文件从哪取？\n29、升级过程中插拔光纤1分钟/2分钟/十分钟，这个是循环3次吗？升级过程指哪个过程？\n30、ONU插上光纤注册前，修改URL地址及配置TR069 WAN。插上光纤查看家庭网关是否能重新连接ACS，端口镜像抓包第一次Inform上报是否发”0 BOOTSTRAP”；按键持续时间达到2秒时，所有指示灯（电源灯可除外）开始以2秒为周期闪烁。ONU恢复出厂会自动重启，观察指示灯，ONU重启后灯灭，上线后指示灯亮。  实际测试环境使用的OLT镜像抓包，不需要拔插光纤；恢复开箱设置后，需要手动注册才会上报Inform；测试步骤使用的WEB恢复出厂设置，这里的按键操作怎么需要实现吗？ 恢复出厂测试用例都有这个问题。\n31、Start_RECOV_Local_CTC_Key_001，电信维护帐号的用户名/密码，接入用户数相关参数，端口映射相关参数，设备认证状态，接口开放权限、错误页面重定向配置、WAN侧L2TP VPN通道配置、插件访问权限、智能OS资源权限，FTP，SAMBA配置，机顶盒模块相关配置，这些配置WEB页面无法配置。\n32、Start_RECOV_Local_CTC_Key_001，步骤4,5,7,10,13,15,16相关参数指哪些？等设置指哪些设置？\n33、预配置模板从哪里获取？\n34、Start_RECOV_RRECOV_ACS_CM_001用例预期结果，check点与用例步骤不一致。  check点使用什么方式获取配置？\n",
					"settings":
					{
						"buffer_size": 2722,
						"line_ending": "Unix",
						"name": "1、是否可以按照预置条件里面的WAN类型配置WAN连接。 具体业务怎么验证？"
					}
				}
			],
			"build_system": "Packages/Python/Python.sublime-build",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Advanced Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Users/cienet/Desktop/py_test"
			],
			"file_history":
			[
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Word Highlight.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/WordHighlight/Word Highlight.sublime-settings",
				"/C/Users/cienet/Desktop/py_test/report.html",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
				"/c/Python/lib/site-packages/pexpect/__init__.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/BRDGMC/bizBRDGMC.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/hgu_telnet.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Config/site_para.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/absHGUProduct.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/impWEBChn.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/SublimeCodeIntel.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
			],
			"find":
			{
				"height": 41.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"配置",
					"VPN通道配置。",
					"配置",
					"重启",
					"WEB维护账户",
					"模块"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "C:\\Users\\cienet\\Desktop\\py_test"
				}
			],
			"groups":
			[
				{
					"selected": 5,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/cienet/Desktop/py_test/assets/console.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 749,
								"regions":
								{
								},
								"selection":
								[
									[
										485,
										485
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										5,
										14,
										19,
										23,
										11,
										218,
										239,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"open_with_edit": true,
									"syntax": "Packages/Python/Python.sublime-syntax",
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/cienet/Desktop/py_test/conftest.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 874,
								"regions":
								{
								},
								"selection":
								[
									[
										229,
										253
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										7,
										8,
										14,
										28,
										13,
										14,
										254,
										200,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/C/Users/cienet/Desktop/py_test/pytest.ini",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 43,
								"regions":
								{
								},
								"selection":
								[
									[
										43,
										43
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										18,
										15,
										49,
										50,
										1,
										251,
										198,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"open_with_edit": true,
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/C/Users/cienet/Desktop/py_test/test_py_001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 994,
								"regions":
								{
								},
								"selection":
								[
									[
										994,
										994
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										18,
										15,
										4,
										27,
										0,
										17,
										235,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"open_with_edit": true,
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 1073.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/C/Users/cienet/Desktop/py_test/bbb.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 321,
								"regions":
								{
								},
								"selection":
								[
									[
										281,
										281
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												280,
												281
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/single_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												259,
												260
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										24,
										17,
										24,
										59,
										7,
										82,
										178,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"open_with_edit": true,
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 91.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/C/Users/cienet/Desktop/py_test/test001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1057,
								"regions":
								{
								},
								"selection":
								[
									[
										322,
										322
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												321,
												322
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/single_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												308,
												309
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										7,
										30,
										9,
										49,
										42,
										12,
										116,
										88,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 87.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/C/Users/cienet/Desktop/烽火/系统启动/资料/模块.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1955,
								"regions":
								{
								},
								"selection":
								[
									[
										227,
										227
									]
								],
								"settings":
								{
									"auto_name": "模块一： 配置WAN连接",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										15,
										16,
										29,
										58,
										8,
										246,
										146,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 8,
							"type": "text"
						},
						{
							"buffer": 7,
							"file": "/C/Users/cienet/Desktop/烽火/系统启动/资料/test.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 782,
								"regions":
								{
								},
								"selection":
								[
									[
										782,
										782
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										15,
										16,
										2,
										48,
										11,
										30,
										185,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 353.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 8,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2722,
								"regions":
								{
								},
								"selection":
								[
									[
										2721,
										0
									]
								],
								"settings":
								{
									"auto_name": "1、是否可以按照预置条件里面的WAN类型配置WAN连接。 具体业务怎么验证？",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"default_dir": "C:\\Users\\cienet\\Desktop\\烽火\\系统启动\\资料",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 41.0
			},
			"input":
			{
				"height": 71.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 391.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,2,-32000,-32000,-1,-1,593,7,54,663",
			"project": "",
			"replace":
			{
				"height": 78.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 295.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 9,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
					"settings":
					{
						"buffer_size": 69774,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Advanced Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service/AC",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service/Start",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service/Start/parameter_file",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase"
			],
			"file_history":
			[
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACTr069.py",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/general/tcsbase.py",
				"//10.182.34.15/d$/FHATP/user/hgu_autotestc103/testData/AC_CT/testCase.lst",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/CTags/CTags.sublime-settings",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/BRDGMC/bizBRDGMC.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/CTags.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/hgu_telnet.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Config/site_para.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/absHGUProduct.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic/impWEBChn.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/SublimeCodeIntel.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Anaconda.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
			],
			"find":
			{
				"height": 59.0
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "\\\\10.182.34.15\\d$\\FHATP\\user\\hgu_autotestc103"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "//10.182.34.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 69774,
								"regions":
								{
								},
								"selection":
								[
									[
										52256,
										52310
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										8,
										26,
										10,
										59,
										49,
										8,
										61,
										186,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 46970.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 59.0
			},
			"input":
			{
				"height": 59.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 297.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,2,-32000,-32000,-1,-1,707,663,168,1319",
			"project": "",
			"replace":
			{
				"height": 114.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"impactr",
						"Lib\\Service\\AC\\impACTr069.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"tc",
						"testData\\AC_CT\\testCase.lst"
					],
					[
						"tcsb",
						"Lib\\general\\tcsbase.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 295.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 11,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"evencode_",
						"evencode_0boot"
					],
					[
						"E",
						"ErrorInCalling"
					],
					[
						"Olt",
						"OLT"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"dire",
						"direction"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Python/Lib/site-packages/selenium/webdriver/remote/webelement.py",
					"settings":
					{
						"buffer_size": 23664,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Python/Lib/site-packages/selenium/webdriver/chrome/webdriver.py",
					"settings":
					{
						"buffer_size": 6024,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Python/Lib/site-packages/selenium/webdriver/remote/webdriver.py",
					"settings":
					{
						"buffer_size": 41709,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/cienet/Desktop/test.py",
					"settings":
					{
						"buffer_size": 11209,
						"encoding": "UTF-8",
						"line_ending": "Unix",
						"name": "import re"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcin",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Python/Lib/site-packages/selenium",
				"/C/Python/Lib/site-packages/selenium/common",
				"/C/Python/Lib/site-packages/selenium/webdriver",
				"/C/Python/Lib/site-packages/selenium/webdriver/chrome",
				"/C/Python/Lib/site-packages/selenium/webdriver/remote"
			],
			"file_history":
			[
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impHost.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/parameter_file/parameter.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACWeb.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_017.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/mapAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_OLT_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_016.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/__init__.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Global.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_RANDOM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_UPGRD_NRM_Local_ACS_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/WiFi/solocase/WiFi_FC_WLANCFG_SSID_UG_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/WiFi/solocase/WiFi_FC_WLANCFG_SSID_UG_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Switch_RECOV_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Key_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_Key_RECOV_003.py"
			],
			"find":
			{
				"height": 54.0
			},
			"find_in_files":
			{
				"height": 285.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "C:\\Python\\Lib\\site-packages\\selenium"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Python/Lib/site-packages/selenium/webdriver/remote/webelement.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 23664,
								"regions":
								{
								},
								"selection":
								[
									[
										22859,
										22859
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										1,
										9,
										10,
										51,
										8,
										110,
										121,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 854.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Python/Lib/site-packages/selenium/webdriver/chrome/webdriver.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 6024,
								"regions":
								{
								},
								"selection":
								[
									[
										3190,
										3190
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										1,
										9,
										10,
										51,
										3,
										18,
										56,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2784.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/C/Python/Lib/site-packages/selenium/webdriver/remote/webdriver.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 41709,
								"regions":
								{
								},
								"selection":
								[
									[
										6929,
										6929
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										1,
										9,
										10,
										51,
										8,
										102,
										165,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 805.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/C/Users/cienet/Desktop/test.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 11209,
								"regions":
								{
								},
								"selection":
								[
									[
										7580,
										7580
									]
								],
								"settings":
								{
									"auto_name": "import re",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												7584,
												7585
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/round_bracket.png",
												"region.yellowish"
											]
										},
										"open":
										{
											"1":
											[
												7548,
												7549
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										10,
										9,
										19,
										18,
										29,
										7,
										192,
										112,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 5529.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 41.0
			},
			"input":
			{
				"height": 71.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 297.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,2,-32000,-32000,-1,-1,670,121,131,777",
			"project": "",
			"replace":
			{
				"height": 78.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"ipfiblac3",
						"Service\\AC\\solocase\\AC_IPFilter_Black_003.py"
					],
					[
						"global",
						"Service\\Global.py"
					],
					[
						"gl",
						"Service\\Global.py"
					],
					[
						"bizvo",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"logintf",
						"Lib\\general\\log\\unilogintf.py"
					],
					[
						"bizs",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"bizstar",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impweb",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"Start_Reboot_Remote_ACS_RECOV_002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_002.py"
					],
					[
						"tc",
						"testData\\AC_CT\\testCase.lst"
					],
					[
						"tcsb",
						"Lib\\general\\tcsbase.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 296.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 41,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"seln",
						"serial_num"
					],
					[
						"evencode_",
						"evencode_0boot"
					],
					[
						"E",
						"ErrorInCalling"
					],
					[
						"Olt",
						"OLT"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"dire",
						"direction"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/rate.py",
					"settings":
					{
						"buffer_size": 364,
						"line_ending": "Unix"
					}
				},
				{
					"file": "/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/commands.py",
					"settings":
					{
						"buffer_size": 3951,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcin",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 531.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Installed Packages",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate"
			],
			"file_history":
			[
				"/C/Users/cienet/AppData/Roaming/Foxmail7/Temp-25940-20201009090046/Attach/checkrate.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/commands.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/Anaconda/anaconda_lib/jedi/third_party/typeshed/stdlib/3/concurrent/futures/thread.pyi",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/DocblockrPython.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/Main.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/formatters/registry.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impSTA.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/absInfoCode.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_Telnet_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_016.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_017.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACWeb.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impOLT.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/bizAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/mapAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impConsle.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/bizLog.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_OLT_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_ACS_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/.gitignore",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_UPGRD_ABNR_Local_SDWP_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Global.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/tcsbase.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impHost.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_ACS_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/parameter_file/parameter.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/atest.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/__init__.py"
			],
			"find":
			{
				"height": 38.0
			},
			"find_in_files":
			{
				"height": 285.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "C:\\Users\\cienet\\AppData\\Roaming\\Sublime Text 3"
				}
			],
			"groups":
			[
				{
					"selected": 1,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/rate.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 364,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										10,
										9,
										17,
										57,
										36,
										4,
										185,
										195,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/commands.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3951,
								"regions":
								{
								},
								"selection":
								[
									[
										995,
										995
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										10,
										9,
										17,
										58,
										46,
										2,
										50,
										122,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 912.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 38.0
			},
			"input":
			{
				"height": 71.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 297.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,2,-32000,-32000,-1,-1,752,415,213,1071",
			"project": "",
			"replace":
			{
				"height": 72.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"ipfiblac3",
						"Service\\AC\\solocase\\AC_IPFilter_Black_003.py"
					],
					[
						"global",
						"Service\\Global.py"
					],
					[
						"gl",
						"Service\\Global.py"
					],
					[
						"bizvo",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"logintf",
						"Lib\\general\\log\\unilogintf.py"
					],
					[
						"bizs",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"bizstar",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impweb",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"Start_Reboot_Remote_ACS_RECOV_002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_002.py"
					],
					[
						"tc",
						"testData\\AC_CT\\testCase.lst"
					],
					[
						"tcsb",
						"Lib\\general\\tcsbase.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 296.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 43,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"evencode_",
						"evencode_0boot"
					],
					[
						"E",
						"ErrorInCalling"
					],
					[
						"Olt",
						"OLT"
					],
					[
						"if",
						"ifmain\tif __name__ == '__main__'"
					],
					[
						"dire",
						"direction"
					],
					[
						"dataw2",
						"data_wan_conx2\tstatement"
					]
				]
			},
			"buffers":
			[
				{
					"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_Telnet_001.py",
					"settings":
					{
						"buffer_size": 3167,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_RANDOM_001.py",
					"settings":
					{
						"buffer_size": 20926,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_FLASH_001.py",
					"settings":
					{
						"buffer_size": 8529,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				},
				{
					"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_001.py",
					"settings":
					{
						"buffer_size": 10114,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Anaconda Python Builder",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							""
						],
						[
							"Packages/Python/Python.sublime-build",
							"Syntax Check"
						]
					],
					[
						"Packages/Python/Python.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						":w",
						":w - Save"
					],
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcin",
						"Package Control: Install Package"
					],
					[
						"pacc",
						"Install Package Control"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 262.0,
				"history":
				[
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Config",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/util_basic",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/parameter_file",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/parameter_file",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/TR069",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Voice",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/WiFi"
			],
			"file_history":
			[
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_UPGRD_NRM_RMSCENE_TR069_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_SHORT_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impConsle.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/map_web_element.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impOLT.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impParaWork.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/impServiceReady.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Start/bizStart.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/Voice/bizVOICE.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/rate.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/coderate/commands.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/commands.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/DocblockrPython.py",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/Main.sublime-menu",
				"/C/Users/cienet/AppData/Roaming/Sublime Text 3/Packages/DocBlockr_Python/formatters/registry.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_UsrNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_URLFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/stc/impSTA.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PG_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACNum_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/absInfoCode.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_MACFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ComplexFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_Telnet_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_IPFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_PortFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_ThreeFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_Black_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_002.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_004.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_005.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_006.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_007.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_008.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_009.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_010.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_011.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_012.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_013.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_014.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_015.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_016.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_TwoFilter_White_017.py",
				"/C/Users/cienet/AppData/Roaming/Foxmail7/Temp-25940-20201009090046/Attach/checkrate.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACWeb.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/bizAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/impACFactory.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/Service/AC/mapAC.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_003.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/log/bizLog.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_OLT_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_RECOV_RRECOV_ACS_CM_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/.gitignore",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_UPGRD_ABNR_Local_SDWP_001.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Global.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Lib/general/tcsbase.py",
				"//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Remote_OLT_RECOV_002.py"
			],
			"find":
			{
				"height": 38.0
			},
			"find_in_files":
			{
				"height": 285.0,
				"where_history":
				[
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\Start\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<open folders>",
					"<open files>",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\Start\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"<current file>",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\AC\\solocase",
					"\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103\\Service\\Start\\solocase",
					""
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"while i < self.max_num:",
					"logger.assertion(AbsInCo('process', 'qry-quit')",
					"logger.assertion(AbsInCo('process', 'qry')",
					"【配置失败】",
					"# 删除WAN连接",
					"# 开始打流",
					"# 生成ACS对象",
					"创建路由WAN",
					"self.sleep = ac_para.wait  # 等待时间",
					"self.dns = site_para.ipv4_pre_dns  # DNS",
					"self.gw = ac_para.static_wan_gw  # 网关",
					"self.mask = ac_para.static_wan_mask  # 掩码",
					"# wan IP",
					"# 目的IP",
					"# 源IP1",
					"# 目的MAC",
					"# 源MAC",
					"# 类型",
					"# 删除WAN连接",
					"# 打开网页",
					"# 刷新dns缓存",
					"wan_query_ipv4(self.s1.get_name())  # 获取WAN状态",
					"# 创建路由WAN",
					"self.wait = ac_para.wait  # 等待时间",
					"self.vlan = site_para.vlan_ipv4_dhcp  # vlan",
					"self.Var8 = 'www.baidu6.com'  # 百度",
					"self.Var7 = 'www.baidu5.com'  # 新浪",
					"self.Var6 = 'www.baidu4.com'  # 百度",
					"self.Var5 = 'www.baidu3.com'  # 新浪",
					"self.Var4 = 'www.baidu2.com'  # 百度",
					"self.Var3 = 'www.baidu1.com'  # 新浪",
					"self.Var2 = site_para.web_baidu  # 百度",
					"self.Var1 = site_para.web_sina  # 新浪",
					"abort",
					"self.pc = self.device1.impsta(ip=self.ip, user=self.user, pwd=self.pwd)",
					"self.wanconx.delete()  # 删除WAN",
					"# 实例化ACS",
					"ping(self.Var2)  # ping网址一百度",
					"刷新dns缓存",
					"ping网址",
					"self.pwd = ac_para.pwd  # PC2密码",
					"self.user = ac_para.user  # PC2账户",
					"self.ip = ac_para.ip  # PC2IP",
					"self.switch2 = '(.*?)'\\n",
					"self.switch1 = '开'  # 开关",
					"ping网址",
					"刷新dns缓存",
					"wo1.execute()  # 执行用例",
					"logger.show_opr_one_step(AbsInCo('process', 'fail'), '【配置失败】，",
					"self.var1 = '192.168.1.1'  # 管理IP",
					"rxrate = packet_loss_judge1(self.stc1.report_stat(\"{}.*\".format(i)))",
					"prepare",
					"logger.show_opr_one_step(AbsInCo('prepare', 'fail'), '【配置失败】，",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '【配置成功】，",
					"logger.show_opr_one_step(AbsInCo('prepare', 'success'), '【配置成功】，",
					"if result1.count(1) == len(result1) and result2.count(0) == len(result2):",
					"if result1.count(0) == len(result1) and result2.count(1) == len(result2):",
					"self.stc1.stop_traffic()  # 停止打流",
					"result2.append(rxrate)  # 最后一条流添加到列表2",
					"result1.append(rxrate)",
					"result2.append(rxrate)",
					"self.stc1.start_traffic()  # 发送流",
					"# 使能IP过滤",
					"# 实例化ImpACFactory",
					"creatres = self.wanconx.create()  # 创建WAN连接",
					"self.s1.set_wan_ipv4('static', [self.wanip, self.mask, self.gw, self.dns, ''])  # 设置静态IP",
					"self.s1.set_vlan('', self.vlan, '')  # 设置vlan_id",
					"self.s1.set_en_vlan(\"en\")  # 启用VLAN",
					"self.s1.set_nat(\"en\")  # 使能NAT",
					"self.s1 = AbsWANConnect()  # 实例化AbsWANConnect类",
					"self.s1.set_nat(\"en\")  # 使能NAT",
					"self.num = (.*?)  # 流数量",
					"self.num = 11  # 流数量",
					"self.dns = site_para.ipv4_pre_dns  # wan dns",
					"self.gw = ac_para.static_wan_gw  # wan gateway",
					"self.mask = ac_para.static_wan_mask  # WAN连接的掩码",
					"self.mask = ac_para.static_wan_mask  # wan mask",
					"# 目的IP结束",
					"# 目的IP开始",
					"self.var3 = '(.*?)'  # 过滤协议",
					"# 源IP结束",
					"# 源IP开始",
					"self.types = '(.*?)'  # 过滤类型",
					"self.type = '(.*?)'  # 过滤类型",
					"self.ori = '(.*?)'  # 过滤方向",
					"self.direction = '(.*?)'  # 过滤方向",
					"self.direction = '(.*？)'  # 过滤方向",
					"self.direction = '（.*？）'  # 过滤方向",
					"self.web.login\\(\\)\\n",
					"self.web.login('hidden')",
					"self.enable_hidden_web\\(\\)\\n",
					"AbsHGUProduct\\(\\).enable_telnet\\(\\)\\n",
					"page_source = self.driver.get_source\\(\\)\\n",
					"self.web.login\\(user\\)\\n",
					"self.web.get_url\\(\\)\\n",
					"self.web.login('hidden')  # 登录",
					"AbsHGUProduct().enable_telnet()  # 使能telnet",
					"self.switch_frame\\(direction=False\\)\\n",
					"self.web.login()  # 登录",
					"self.cfg",
					"Start_RECOV_RRECOV_OLT_CM_001",
					"user",
					"foramt",
					"res = ImpACFactory().create_product_acswitch(cfg='WEB').operate_firewall()",
					"ClassName",
					"Start_RECOV_Local_CM_Key_001",
					"self.var1 = '\\d{2,3}.\\d{2,3}.\\d{1,2}.\\d{3}'",
					"self.vlan = Global.olt_uplink_vlan1  # VLAN",
					"ping(self.Var1)",
					"ping",
					"Start_Reboot_Remote_APP_RECOV_003",
					"Start_Reboot_Remote_APP_RECOV_002",
					"sleep_time",
					"mgnt_ip",
					"file",
					"# 实例化对象",
					"# 实例化对象  # 实例化对象",
					"self.other = ImpStartOther()  # 实例化对象",
					"# 实例化对象  # 实例化操作对象",
					"# 等待设备重启  # 等待ONU重启完成",
					"# 判断设备是否重启完成  # 判断ONU是否重启完成",
					"Global",
					"连接模式为{}'.format\\(self.type1\\)\\n",
					"连接模式为{}'.format(self.type1)",
					"连接模式为.*'\\)",
					", result1.count(1),",
					"(len(result1) - result1.count(0)",
					"result1.count(0) == 0"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"while i < self.max_num:  # 循环执行多次",
					"logger.assertion(AbsInCo('process', 'fail')",
					"logger.assertion(AbsInCo('process', 'success')",
					"# 删除WAN连接配置",
					"# 开始发送流",
					"# 实例化ACS对象",
					"创建路由类型WAN",
					"self.sleep = ac_para.wait  # 配置等待时间",
					"self.dns = site_para.ipv4_pre_dns  # 静态WAN连接的DNS",
					"self.gw = ac_para.static_wan_gw  # 静态WAN连接的网关",
					"self.mask = ac_para.static_wan_mask  # 静态WAN连接的掩码",
					"# 静态WAN连接的IP",
					"# 目的IP地址信息",
					"# 源IP地址信息",
					"# 目的MAC地址信息",
					"# 源MAC地址信息",
					"# 过滤策略类型",
					"# 删除WAN连接配置",
					"# 通过浏览器打开网页",
					"# 刷新dns缓存信息",
					"wan_query_ipv4(self.s1.get_name())  # 获取WAN连接状态",
					"# 创建路由类型WAN",
					"self.wait = ac_para.wait  # 等待配置生效的时间",
					"self.vlan = site_para.vlan_ipv4_dhcp  # wan连接的vlan信息",
					"self.Var8 = 'www.baidu6.com'  # 网址八百度",
					"self.Var7 = 'www.baidu5.com'  # 网址七百度",
					"self.Var6 = 'www.baidu4.com'  # 网址六百度",
					"self.Var5 = 'www.baidu3.com'  # 网址五百度",
					"self.Var4 = 'www.baidu2.com'  # 网址四百度",
					"self.Var3 = 'www.baidu1.com'  # 网址三百度",
					"self.Var2 = site_para.web_baidu  # 网址二百度",
					"self.Var1 = site_para.web_sina  # 网址一新浪",
					"qry-quit",
					"self.pc = self.device1.impsta(ip=self.ip, user=self.user, pwd=self.pwd)  # 登录到第二台电脑",
					"self.wanconx.delete()  # 删除WAN连接配置",
					"# 实例化ACS对象",
					"ping(self.Var2)  # ping网址二百度",
					"刷新dns缓存信息",
					"ping网址一百度",
					"self.pwd = ac_para.pwd  # 第二台电脑的密码",
					"self.ip = ac_para.ip  # 第二台电脑的账户",
					"self.ip = ac_para.ip  # 第二台电脑的IP",
					"self.switch2 = '$1'  # 过滤策略开关",
					"self.switch1 = '开'  # 过滤策略开关",
					"ping网址一百度",
					"刷新dns缓存信息",
					"wo1.execute()  # 执行测试用例",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '",
					"self.var1 = '192.168.1.1'  # 网关的管理IP",
					"rxrate = packet_loss_judge1(self.stc1.report_stat(\"{}.*\".format(i)))  # 获取打流结果",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg-quit'), '",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '",
					"logger.show_opr_one_step(AbsInCo('prepare', 'cfg'), '【配置成功】，",
					"if result1.count(1) == len(result1) and result2.count(0) == len(result2):  # 过滤规则内的数据流发送流量等于接收流量，其他数据流接收流量为0",
					"if result1.count(0) == len(result1) and result2.count(1) == len(result2):  # 过滤规则内的数据流接收流量为0，其他数据流发送流量等于接收流量",
					"self.stc1.stop_traffic()  # 停止发送数据流",
					"result2.append(rxrate)  # 过滤规则外的打流结果添加到列表2",
					"result1.append(rxrate)  # 过滤规则内的打流结果添加到列表1",
					"result2.append(rxrate)  # 最后一条流添加到列表2",
					"self.stc1.start_traffic()  # 发送数据流",
					"# 使能IP过滤策略",
					"# 实例化ImpACFactory对象",
					"creatres = self.wanconx.create()  # 下发WAN连接配置",
					"self.s1.set_wan_ipv4('static', [self.wanip, self.mask, self.gw, self.dns, ''])  # 设置静态WAN连接的IP",
					"self.s1.set_vlan('', self.vlan, '')  # 设置WAN连接的VLAN ID",
					"self.s1.set_en_vlan(\"en\")  # 启用WAN连接的VLAN功能",
					"self.s1.set_nat(\"en\")  # 使能NAT转换功能",
					"self.s1 = AbsWANConnect()  # 实例化AbsWANConnect对象",
					"self.num = $1  # 发送流的数量",
					"self.dns = site_para.ipv4_pre_dns  # 静态WAN连接的DNS",
					"self.gw = ac_para.static_wan_gw  # 静态WAN连接的网关",
					"self.mask = ac_para.static_wan_mask  # 静态WAN连接的掩码",
					"self.mask = ac_para.static_wan_mask  # WAN连接的掩码",
					"# 目的IP地址结束",
					"# 目的IP地址开始",
					"self.var3 = '$1'  # 过滤策略协议",
					"# 源IP地址结束",
					"# 源IP地址开始",
					"self.types = '$1'  # 过滤策略类型",
					"self.type = '$1'  # 过滤策略类型",
					"self.ori = '$1'  # 过滤策略方向",
					"self.ori = '$1'  # 过滤方向",
					"self.direction = '$1'  # 过滤策略方向",
					"self.web.login()  # 登录网关设备\\n",
					"self.web.login('hidden')  # 登录隐藏页面\\n",
					"self.enable_hidden_web()  # 使能设备隐藏页面\\n",
					"AbsHGUProduct\\(\\).enable_telnet\\(\\)  # 使能设备telnet功能\\n",
					"page_source = self.driver.get_source()  # 获取网页源码\\n",
					"self.web.login(user)  # 登录网关设备\\n",
					"self.web.get_url()  # 打开网关登录设备\\n",
					"self.web.login('hidden')  # 登录隐藏页面",
					"AbsHGUProduct().enable_telnet()  # 使能telnet的功能",
					"self.switch_frame(direction=False)  # 切换到主框架\\n",
					"self.web.login()  # 登录网关设备",
					"self.vlan = Global.olt_uplink_vlan1  # 数据业务的VLAN",
					"# 实例化对象",
					"# 等待设备重启",
					"# 判断设备是否重启完成",
					"# 判断设备是否重启完成  # 判断ONU是否重启完成",
					"连接模式为{}'.format(self.type1))",
					"连接模式为{}'.format(self.type1)\\n",
					", (result1.count(1),",
					"result1.count(1)",
					"result1.count(1) == len(result1)",
					"result2.count(1)",
					"load=str(int(int(self.load) / self.num))",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg'), '",
					"logger.show_opr_one_step(AbsInCo('process', 'cfg-quit'), '",
					"self.lan = ac_para.lan  # 打流对应的LAN口",
					"and result2.count(1) == len(result2):",
					"self.wanip = ac_para.static_wan_ip  # 静态WAN连接的IP",
					"load=int(int(self.load) / self.num)",
					"self.lanintf = ac_para.lan  # 打流对应的LAN口\\n",
					"self.cfg = '$1'  # 业务配置方式\n        self.load = ac_para.load  # 数据流流量\n        self.lanintf = ac_para.lan  # 打流对应的LAN口",
					"self.traffic.create_traffic_raw(load=self.load, lanintf=self.lan, ",
					"result != 'ErrorInCalling':  # 配置下发成功",
					"flag = 'done'  # 初始化flag为done，默认返回done",
					"flag = \"ErrorInCalling\"  # 配置失败时返回ErrorInCalling",
					"self.cfg = '$1'  # 业务配置方式",
					"self.evencode = start_para.event_code_1boot  # Inform报文事件码1 boot",
					"\"",
					"",
					"self.regist_data = start_para.regist_data  # 注册ACS平台状态数据",
					"self.sn = start_para.sn  # 注册ACS平台使用的SN",
					"self.regist_default_data = start_para.regist_default_data  # 逻辑ID默认配置数据",
					"self.regist_data = start_para.regist_data  # 逻辑ID配置数据",
					"self.web.regist(self.sn)  # 将ONU注册上平台\\n",
					"if self.web.regist(self.sn):  # 将ONU注册上平台"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "\\\\10.182.33.15\\d$\\FHATP\\user\\hgu_autotestc103"
				}
			],
			"groups":
			[
				{
					"selected": 3,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/AC/solocase/AC_Telnet_001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 3167,
								"regions":
								{
								},
								"selection":
								[
									[
										1013,
										1013
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										6,
										10,
										9,
										13,
										51,
										9,
										193,
										111,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 870.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_RANDOM_001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 20926,
								"regions":
								{
								},
								"selection":
								[
									[
										5634,
										5634
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										23,
										14,
										40,
										56,
										9,
										245,
										116,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 3410.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_ABNORMAL_REPEAT_FLASH_001.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 8529,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
										},
										"icon":
										{
										},
										"open":
										{
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										9,
										4,
										14,
										23,
										33,
										10,
										180,
										63,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "//10.182.33.15/d$/FHATP/user/hgu_autotestc103/Service/Start/solocase/Start_Reboot_Local_NOSW_RECOV_001.py",
							"semi_transient": true,
							"settings":
							{
								"buffer_size": 10114,
								"regions":
								{
								},
								"selection":
								[
									[
										8396,
										8403
									]
								],
								"settings":
								{
									"bracket_highlighter.busy": false,
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												8403,
												8404
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/single_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												8395,
												8396
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"c_time":
									[
										128,
										3,
										99,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										100,
										97,
										116,
										101,
										116,
										105,
										109,
										101,
										10,
										113,
										0,
										67,
										10,
										7,
										228,
										7,
										20,
										9,
										0,
										53,
										0,
										153,
										180,
										113,
										1,
										133,
										113,
										2,
										82,
										113,
										3,
										46
									],
									"syntax": "Packages/Python/Python.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 5394.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 38.0
			},
			"input":
			{
				"height": 71.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 297.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,2,3,-32000,-32000,-1,-1,664,1821,125,2477",
			"project": "",
			"replace":
			{
				"height": 72.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"glo",
						"Service\\Global.py"
					],
					[
						"ipfiblac3",
						"Service\\AC\\solocase\\AC_IPFilter_Black_003.py"
					],
					[
						"global",
						"Service\\Global.py"
					],
					[
						"gl",
						"Service\\Global.py"
					],
					[
						"bizvo",
						"Lib\\Service\\Voice\\bizVOICE.py"
					],
					[
						"tcs",
						"Lib\\general\\tcsbase.py"
					],
					[
						"bizstart",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impd",
						"Lib\\general\\stc\\impDevice.py"
					],
					[
						"logintf",
						"Lib\\general\\log\\unilogintf.py"
					],
					[
						"bizs",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"bizstar",
						"Lib\\Service\\Start\\bizStart.py"
					],
					[
						"impweb",
						"Lib\\general\\util_basic\\impWEBChn.py"
					],
					[
						"site",
						"Config\\site_para.py"
					],
					[
						"Start_Reboot_Remote_ACS_RECOV_002.py",
						"Service\\Start\\solocase\\Start_Reboot_Remote_ACS_RECOV_002.py"
					],
					[
						"tc",
						"testData\\AC_CT\\testCase.lst"
					],
					[
						"tcsb",
						"Lib\\general\\tcsbase.py"
					],
					[
						"abshgu",
						"Lib\\general\\util_basic\\absHGUProduct.py"
					],
					[
						"hgutel",
						"Lib\\general\\hgu_telnet.py"
					],
					[
						"impwe",
						"Lib\\general\\util_basic\\impWEBChn.py"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 296.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 28,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
